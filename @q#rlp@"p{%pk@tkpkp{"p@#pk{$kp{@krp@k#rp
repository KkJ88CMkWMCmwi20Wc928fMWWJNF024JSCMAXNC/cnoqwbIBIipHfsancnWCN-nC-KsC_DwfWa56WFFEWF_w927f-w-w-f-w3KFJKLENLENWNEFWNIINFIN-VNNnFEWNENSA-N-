local OfficialElectrowareKey = Instance.new("ScreenGui")
local MainGui = Instance.new("Frame")
local UIGradient = Instance.new("UIGradient")
local UICorner = Instance.new("UICorner")
local KeyFrame = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local TextBox = Instance.new("TextBox")
local TextLabel = Instance.new("TextLabel")
local TextButton = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local TextLabel_2 = Instance.new("TextLabel")
local ImageLabel = Instance.new("ImageLabel")
local Frame = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local TextButton_2 = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local WrongKey = Instance.new("Frame")
local TextLabel_3 = Instance.new("TextLabel")
local UICorner_6 = Instance.new("UICorner")
local UICorner_7 = Instance.new("UICorner")
local ImageLabel_2 = Instance.new("ImageLabel")
local TextButton_3 = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")

OfficialElectrowareKey.Name = "OfficialElectrowareKey"
OfficialElectrowareKey.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
OfficialElectrowareKey.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MainGui.Name = "MainGui"
MainGui.Parent = OfficialElectrowareKey
MainGui.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainGui.Position = UDim2.new(0.36916402, 0, 0.249106079, 0)
MainGui.Size = UDim2.new(0, 371, 0, 427)

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(85, 170, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient.Parent = MainGui

UICorner.Parent = MainGui

KeyFrame.Name = "KeyFrame"
KeyFrame.Parent = MainGui
KeyFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
KeyFrame.Position = UDim2.new(0.0350404307, 0, 0.0281030443, 0)
KeyFrame.Size = UDim2.new(0, 345, 0, 403)

UICorner_2.Parent = KeyFrame

TextBox.Parent = KeyFrame
TextBox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TextBox.Position = UDim2.new(0.171014488, 0, 0.600496292, 0)
TextBox.Size = UDim2.new(0, 227, 0, 63)
TextBox.Font = Enum.Font.GothamBlack
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextSize = 14.000

TextLabel.Parent = KeyFrame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(0.092753619, 0, 0.419354856, 0)
TextLabel.Size = UDim2.new(0, 278, 0, 58)
TextLabel.Font = Enum.Font.GothamBlack
TextLabel.Text = "Please enter a Key!"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

TextButton.Parent = KeyFrame
TextButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TextButton.Position = UDim2.new(0.281159431, 0, 0.816377163, 0)
TextButton.Size = UDim2.new(0, 149, 0, 50)
TextButton.Font = Enum.Font.GothamBlack
TextButton.Text = "Enter"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true
TextButton.MouseButton1Down:Connect(function()
	if TextBox.Text == "ONLYWXEEILMAO" or TextBox.Text == "v1TESTER_JWIASD2" or TextBox.Text == "KDnEUmd03_jfn45CA" then
		-- Gui to Lua
		-- Version: 3.2

		-- Instances:
		OfficialElectrowareKey:Destroy()
		local Electroware = Instance.new("ScreenGui")
		local MainRBGFrame = Instance.new("Frame")
		local UIFrame = Instance.new("Frame")
		local UICorner = Instance.new("UICorner")
		local SelectionList = Instance.new("Frame")
		local ReanimationsButton = Instance.new("TextButton")
		local UICorner_2 = Instance.new("UICorner")
		local FEscriptsButton = Instance.new("TextButton")
		local UICorner_3 = Instance.new("UICorner")
		local NeededHatsButton = Instance.new("TextButton")
		local UICorner_4 = Instance.new("UICorner")
		local CreditsButton = Instance.new("TextButton")
		local UICorner_5 = Instance.new("UICorner")
		local UpdatesButton = Instance.new("TextButton")
		local UICorner_6 = Instance.new("UICorner")
		local TextPanel = Instance.new("Frame")
		local UICorner_7 = Instance.new("UICorner")
		local TextLabel = Instance.new("TextLabel")
		local xButton = Instance.new("TextButton")
		local UICorner_8 = Instance.new("UICorner")
		local TheLogo = Instance.new("ImageLabel")
		local FEscriptsFrame = Instance.new("ScrollingFrame")
		local UICorner_9 = Instance.new("UICorner")
		local FePenisv1Button = Instance.new("TextButton")
		local UICorner_10 = Instance.new("UICorner")
		local FePenisv2Button = Instance.new("TextButton")
		local UICorner_11 = Instance.new("UICorner")
		local FePenisv3Button = Instance.new("TextButton")
		local UICorner_12 = Instance.new("UICorner")
		local FeBoobsandAssButton = Instance.new("TextButton")
		local UICorner_13 = Instance.new("UICorner")
		local ReanimationsFrame = Instance.new("ScrollingFrame")
		local UICorner_14 = Instance.new("UICorner")
		local Reanimationv1dm = Instance.new("TextButton")
		local UICorner_15 = Instance.new("UICorner")
		local FEpenisV3ReanimationButton = Instance.new("TextButton")
		local UICorner_16 = Instance.new("UICorner")
		local Reanimationv1Button = Instance.new("TextButton")
		local UICorner_17 = Instance.new("UICorner")
		local NeededHatsFrame = Instance.new("ScrollingFrame")
		local UICorner_18 = Instance.new("UICorner")
		local CopyPPv1HatsButton = Instance.new("TextButton")
		local UICorner_19 = Instance.new("UICorner")
		local CopyPPv2HatsButton = Instance.new("TextButton")
		local UICorner_20 = Instance.new("UICorner")
		local CopyPPv3HatsButton = Instance.new("TextButton")
		local UICorner_21 = Instance.new("UICorner")
		local CopyFeBoobsAndAssHatsButton = Instance.new("TextButton")
		local UICorner_22 = Instance.new("UICorner")
		local CreditsFrame = Instance.new("ScrollingFrame")
		local UICorner_23 = Instance.new("UICorner")
		local TextLabel_2 = Instance.new("TextLabel")
		local TextLabel_3 = Instance.new("TextLabel")
		local UpdatesFrame = Instance.new("ScrollingFrame")
		local UICorner_24 = Instance.new("UICorner")
		local TextLabel_4 = Instance.new("TextLabel")
		local TextLabel_5 = Instance.new("TextLabel")
		local UICorner_25 = Instance.new("UICorner")
		local UIGradient = Instance.new("UIGradient")
		local CoreGui = game:GetService("CoreGui")

		--Properties:

		Electroware.Name = "Electroware"
		Electroware.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
		Electroware.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		Electroware.ResetOnSpawn = false
		Electroware.Parent = game.CoreGui

		MainRBGFrame.Name = "MainRBGFrame"
		MainRBGFrame.Parent = Electroware
		MainRBGFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		MainRBGFrame.Position = UDim2.new(0.256198347, 0, 0.321811736, 0)
		MainRBGFrame.Size = UDim2.new(0, 649, 0, 392)
		MainRBGFrame.Active = true
		MainRBGFrame.Draggable = true

		UIFrame.Name = "UIFrame"
		UIFrame.Parent = MainRBGFrame
		UIFrame.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
		UIFrame.Position = UDim2.new(0.0149651505, 0, 0.0324651524, 0)
		UIFrame.Size = UDim2.new(0, 629, 0, 370)

		UICorner.CornerRadius = UDim.new(0, 1)
		UICorner.Parent = UIFrame

		SelectionList.Name = "SelectionList"
		SelectionList.Parent = UIFrame
		SelectionList.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
		SelectionList.BorderColor3 = Color3.fromRGB(27, 42, 53)
		SelectionList.Position = UDim2.new(-0.000710006745, 0, 0, 0)
		SelectionList.Size = UDim2.new(0, 174, 0, 370)

		ReanimationsButton.Name = "ReanimationsButton"
		ReanimationsButton.Parent = SelectionList
		ReanimationsButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		ReanimationsButton.Position = UDim2.new(0, 0, 0.14054054, 0)
		ReanimationsButton.Size = UDim2.new(0, 176, 0, 50)
		ReanimationsButton.Font = Enum.Font.GothamBlack
		ReanimationsButton.Text = "Reanimations"
		ReanimationsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		ReanimationsButton.TextSize = 20.000
		ReanimationsButton.TextWrapped = true

		UICorner_2.CornerRadius = UDim.new(0, 1)
		UICorner_2.Parent = ReanimationsButton

		FEscriptsButton.Name = "FEscriptsButton"
		FEscriptsButton.Parent = SelectionList
		FEscriptsButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		FEscriptsButton.Position = UDim2.new(0, 0, 0.275675684, 0)
		FEscriptsButton.Size = UDim2.new(0, 176, 0, 50)
		FEscriptsButton.Font = Enum.Font.GothamBlack
		FEscriptsButton.Text = "FE Scripts"
		FEscriptsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		FEscriptsButton.TextSize = 20.000
		FEscriptsButton.TextWrapped = true

		UICorner_3.CornerRadius = UDim.new(0, 1)
		UICorner_3.Parent = FEscriptsButton

		NeededHatsButton.Name = "NeededHatsButton"
		NeededHatsButton.Parent = SelectionList
		NeededHatsButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		NeededHatsButton.Position = UDim2.new(0, 0, 0.410810739, 0)
		NeededHatsButton.Size = UDim2.new(0, 176, 0, 50)
		NeededHatsButton.Font = Enum.Font.GothamBlack
		NeededHatsButton.Text = "Needed Hats"
		NeededHatsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		NeededHatsButton.TextSize = 20.000
		NeededHatsButton.TextWrapped = true

		UICorner_4.CornerRadius = UDim.new(0, 1)
		UICorner_4.Parent = NeededHatsButton

		CreditsButton.Name = "CreditsButton"
		CreditsButton.Parent = SelectionList
		CreditsButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		CreditsButton.Position = UDim2.new(0, 0, 0.543243229, 0)
		CreditsButton.Size = UDim2.new(0, 176, 0, 50)
		CreditsButton.Font = Enum.Font.GothamBlack
		CreditsButton.Text = "Credits"
		CreditsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		CreditsButton.TextSize = 20.000
		CreditsButton.TextWrapped = true

		UICorner_5.CornerRadius = UDim.new(0, 1)
		UICorner_5.Parent = CreditsButton

		UpdatesButton.Name = "UpdatesButton"
		UpdatesButton.Parent = SelectionList
		UpdatesButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		UpdatesButton.Position = UDim2.new(0, 0, 0.678378284, 0)
		UpdatesButton.Size = UDim2.new(0, 176, 0, 50)
		UpdatesButton.Font = Enum.Font.GothamBlack
		UpdatesButton.Text = "Updates"
		UpdatesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		UpdatesButton.TextSize = 20.000
		UpdatesButton.TextWrapped = true

		UICorner_6.CornerRadius = UDim.new(0, 1)
		UICorner_6.Parent = UpdatesButton

		TextPanel.Name = "TextPanel"
		TextPanel.Parent = UIFrame
		TextPanel.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
		TextPanel.Position = UDim2.new(-0.000710006745, 0, -0.00795642752, 0)
		TextPanel.Size = UDim2.new(0, 629, 0, 55)

		UICorner_7.CornerRadius = UDim.new(0, 1)
		UICorner_7.Parent = TextPanel

		TextLabel.Parent = TextPanel
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.Position = UDim2.new(0.349313587, 0, 0.243367508, 0)
		TextLabel.Size = UDim2.new(0, 246, 0, 38)
		TextLabel.Font = Enum.Font.GothamBlack
		TextLabel.Text = "Electroware v0.9.2(testing)"
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14.000
		TextLabel.TextWrapped = true

		xButton.Name = "xButton"
		xButton.Parent = UIFrame
		xButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		xButton.Position = UDim2.new(0.93322736, 0, -0.0081081083, 0)
		xButton.Size = UDim2.new(0, 42, 0, 35)
		xButton.Font = Enum.Font.GothamBlack
		xButton.Text = "x"
		xButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		xButton.TextSize = 14.000
		xButton.MouseButton1Down:Connect(function()
			Electroware:Destroy()
		end)

		UICorner_8.CornerRadius = UDim.new(0, 1)
		UICorner_8.Parent = xButton

		TheLogo.Name = "TheLogo"
		TheLogo.Parent = UIFrame
		TheLogo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TheLogo.BackgroundTransparency = 1.000
		TheLogo.Position = UDim2.new(0.00158982514, 0, 0, 0)
		TheLogo.Size = UDim2.new(0, 48, 0, 48)
		TheLogo.Image = "http://www.roblox.com/asset/?id=9296791795"

		FEscriptsFrame.Name = "FEscriptsFrame"
		FEscriptsFrame.Parent = UIFrame
		FEscriptsFrame.Active = true
		FEscriptsFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		FEscriptsFrame.Position = UDim2.new(0.278219402, 0, 0.14054054, 0)
		FEscriptsFrame.Size = UDim2.new(0, 453, 0, 318)
		FEscriptsFrame.Visible = false

		UICorner_9.CornerRadius = UDim.new(0, 1)
		UICorner_9.Parent = FEscriptsFrame

		FePenisv1Button.Name = "FePenisv1Button"
		FePenisv1Button.Parent = FEscriptsFrame
		FePenisv1Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		FePenisv1Button.Position = UDim2.new(0.097130239, 0, 0.0241369307, 0)
		FePenisv1Button.Size = UDim2.new(0, 364, 0, 41)
		FePenisv1Button.Font = Enum.Font.GothamBlack
		FePenisv1Button.Text = "FE Penis v1"
		FePenisv1Button.TextColor3 = Color3.fromRGB(255, 255, 255)
		FePenisv1Button.TextSize = 14.000
		FePenisv1Button.MouseButton1Down:Connect(function()
			game.Players.LocalPlayer.Character.RedBeanieWithHair.Handle.att1_Handle.Orientation = Vector3.new(-90, -0, 0)
			game.Players.LocalPlayer.Character.RedBeanieWithHair.Handle.att1_Handle.Position = Vector3.new(0, -2, -1.9)
			game.Players.LocalPlayer.Character.MeshPartAccessory.Handle.att1_Handle.Position = Vector3.new(1, -3.7, -1)
			game.Players.LocalPlayer.Character.InternationalFedora.Handle.att1_Handle.Position = Vector3.new(-1, -3.7, -1)
		end)
		UICorner_10.CornerRadius = UDim.new(0, 1)
		UICorner_10.Parent = FePenisv1Button

		FePenisv2Button.Name = "FePenisv2Button"
		FePenisv2Button.Parent = FEscriptsFrame
		FePenisv2Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		FePenisv2Button.Position = UDim2.new(0.097130239, 0, 0.110623419, 0)
		FePenisv2Button.Size = UDim2.new(0, 364, 0, 41)
		FePenisv2Button.Font = Enum.Font.GothamBlack
		FePenisv2Button.Text = "FE Penis v2"
		FePenisv2Button.TextColor3 = Color3.fromRGB(255, 255, 255)
		FePenisv2Button.TextSize = 14.000
		FePenisv2Button.MouseButton1Down:Connect(function()
			game.Players.LocalPlayer.Character["Pal Hair"].Handle.att1_Handle.Position = Vector3.new(0, -2.7, -1.1)
			game.Players.LocalPlayer.Character.LavanderHair.Handle.att1_Handle.Position = Vector3.new(0, -2.7, -3)
			game.Players.LocalPlayer.Character.LavanderHair.Handle.att1_Handle.Orientation = Vector3.new(10, 0, 0)
			game.Players.LocalPlayer.Character.MeshPartAccessory.Handle.att1_Handle.Position = Vector3.new(0.95, -3.7, -1)
			game.Players.LocalPlayer.Character.InternationalFedora.Handle.att1_Handle.Position = Vector3.new(-0.8, -3.7, -1)
		end)

		UICorner_11.CornerRadius = UDim.new(0, 1)
		UICorner_11.Parent = FePenisv2Button

		FePenisv3Button.Name = "FePenisv3Button"
		FePenisv3Button.Parent = FEscriptsFrame
		FePenisv3Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		FePenisv3Button.Position = UDim2.new(0.097130239, 0, 0.201163948, 0)
		FePenisv3Button.Size = UDim2.new(0, 364, 0, 41)
		FePenisv3Button.Font = Enum.Font.GothamBlack
		FePenisv3Button.Text = "FE Penis v3(USE THE REANIMATION)"
		FePenisv3Button.TextColor3 = Color3.fromRGB(255, 255, 255)
		FePenisv3Button.TextSize = 14.000
		FePenisv3Button.MouseButton1Down:Connect(function()
			game.Players.LocalPlayer.Character["Pal Hair"].Handle.att1_Handle.Position = Vector3.new(0, -2.7, -1.1)
			game.Players.LocalPlayer.Character.LavanderHair.Handle.att1_Handle.Position = Vector3.new(0, -2.7, -3)
			game.Players.LocalPlayer.Character.LavanderHair.Handle.att1_Handle.Orientation = Vector3.new(10, 0, 0)
			game.Players.LocalPlayer.Character.MeshPartAccessory.Handle.att1_Handle.Position = Vector3.new(0.95, -3.7, -1)
			game.Players.LocalPlayer.Character.InternationalFedora.Handle.att1_Handle.Position = Vector3.new(-0.8, -3.7, -1)

			local a = game.Players.LocalPlayer.Character["Head"]:FindFirstChild("att1_Head")
			a.Position = Vector3.new(0, -2.1, -4)
			a.Orientation = Vector3.new(80, -160, -80)
			game.Players.LocalPlayer.Character.Head.face:Destroy()
			game.Players.LocalPlayer.Character.Model.Head.face:Destroy()

			local FEppV3GUI = Instance.new("ScreenGui")
			local RBGMainFrame = Instance.new("Frame")
			local UICorner = Instance.new("UICorner")
			local UIGradient = Instance.new("UIGradient")
			local FEppv3Frame = Instance.new("Frame")
			local TextLabel = Instance.new("TextLabel")
			local TextButton = Instance.new("TextButton")
			local UICorner_2 = Instance.new("UICorner")
			local TextButton_2 = Instance.new("TextButton")
			local UICorner_3 = Instance.new("UICorner")
			local TextButton_3 = Instance.new("TextButton")
			local UICorner_4 = Instance.new("UICorner")
			local CoreGui = game:GetService("CoreGui")

			FEppV3GUI.Name = "FEppV3GUI"
			FEppV3GUI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
			FEppV3GUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
			FEppV3GUI.ResetOnSpawn = false
			FEppV3GUI.Parent = game.CoreGui

			RBGMainFrame.Name = "RBGMainFrame"
			RBGMainFrame.Parent = FEppV3GUI
			RBGMainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			RBGMainFrame.Position = UDim2.new(0.79263711, 0, 0.535160899, 0)
			RBGMainFrame.Size = UDim2.new(0, 187, 0, 235)
			RBGMainFrame.Active = true
			RBGMainFrame.Draggable = true

			UICorner.Parent = RBGMainFrame

			UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(85, 170, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(85, 170, 255))}
			UIGradient.Parent = RBGMainFrame

			FEppv3Frame.Name = "FEppv3Frame"
			FEppv3Frame.Parent = RBGMainFrame
			FEppv3Frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			FEppv3Frame.Position = UDim2.new(0.0415153205, 0, 0.0269170515, 0)
			FEppv3Frame.Size = UDim2.new(0, 170, 0, 221)

			TextLabel.Parent = FEppv3Frame
			TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel.BackgroundTransparency = 1.000
			TextLabel.Position = UDim2.new(0, 0, 0.0180995483, 0)
			TextLabel.Size = UDim2.new(0, 170, 0, 26)
			TextLabel.Font = Enum.Font.GothamBlack
			TextLabel.Text = "FE Penis v3 GUI"
			TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel.TextSize = 14.000

			TextButton.Parent = FEppv3Frame
			TextButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
			TextButton.Position = UDim2.new(0, 0, 0.203619912, 0)
			TextButton.Size = UDim2.new(0, 170, 0, 37)
			TextButton.Font = Enum.Font.GothamBlack
			TextButton.Text = "Brick Up"
			TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextButton.TextSize = 14.000
			TextButton.MouseButton1Down:Connect(function()
				game.Players.LocalPlayer.Character.Head.att1_Head.Position = Vector3.new(0, -2.1, -4)
				game.Players.LocalPlayer.Character.LavanderHair.Handle.att1_Handle.Orientation = Vector3.new(10, 0, 0)
				game.Players.LocalPlayer.Character.LavanderHair.Handle.att1_Handle.Position = Vector3.new(0, -2.7, -3)
				game.Players.LocalPlayer.Character["Pal Hair"].Handle.att1_Handle.Position = Vector3.new(0, -2.7, -1.1)
				game.Players.LocalPlayer.Character["Pal Hair"].Handle.att1_Handle.Orientation = Vector3.new(-0, 0, 0)
			end)

			UICorner_2.CornerRadius = UDim.new(0, 1)
			UICorner_2.Parent = TextButton

			TextButton_2.Parent = FEppv3Frame
			TextButton_2.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
			TextButton_2.Position = UDim2.new(0, 0, 0.475113153, 0)
			TextButton_2.Size = UDim2.new(0, 170, 0, 36)
			TextButton_2.Font = Enum.Font.GothamBlack
			TextButton_2.Text = "Brick Down"
			TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextButton_2.TextSize = 14.000
			TextButton_2.MouseButton1Down:Connect(function()
				game.Players.LocalPlayer.Character.LavanderHair.Handle.att1_Handle.Position = Vector3.new(0, -3, -1.1)
				game.Players.LocalPlayer.Character.LavanderHair.Handle.att1_Handle.Orientation = Vector3.new(-20, -0, 0)
				game.Players.LocalPlayer.Character["Pal Hair"].Handle.att1_Handle.Position = Vector3.new(0, -3, -1.1)
				game.Players.LocalPlayer.Character["Pal Hair"].Handle.att1_Handle.Orientation = Vector3.new(-20, -0, 0)
				game.Players.LocalPlayer.Character.Head.att1_Head.Position = Vector3.new(0, -3.1, -2.3)
			end)

			UICorner_3.CornerRadius = UDim.new(0, 1)
			UICorner_3.Parent = TextButton_2

			TextButton_3.Parent = FEppv3Frame
			TextButton_3.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
			TextButton_3.Position = UDim2.new(0.817647099, 0, 0.855203629, 0)
			TextButton_3.Size = UDim2.new(0, 31, 0, 32)
			TextButton_3.Font = Enum.Font.GothamBlack
			TextButton_3.Text = "x"
			TextButton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextButton_3.TextSize = 14.000
			TextButton_3.MouseButton1Down:Connect(function()
				FEppV3GUI:Destroy()
			end)

			UICorner_4.CornerRadius = UDim.new(0, 1)
			UICorner_4.Parent = TextButton_3

			-- Scripts:

			local function BFPY_fake_script() -- RBGMainFrame.LocalScript 
				local script = Instance.new('LocalScript', RBGMainFrame)

				local button = script.Parent
				local gradient = button.UIGradient
				local ts = game:GetService("TweenService")
				local ti = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
				local offset = {Offset = Vector2.new(1, 0)}
				local create = ts:Create(gradient, ti, offset)
				local startingPos = Vector2.new(-1, 0)
				local list = {} 
				local s, kpt = ColorSequence.new, ColorSequenceKeypoint.new
				local counter = 0
				local status = "down" 
				gradient.Offset = startingPos
				local function rainbowColors()
					local sat, val = 255, 255 
					for i = 1, 15 do 
						local hue = i * 17 
						table.insert(list, Color3.fromHSV(hue / 255, sat / 255, val / 255))
					end
				end
				rainbowColors()
				gradient.Color = s({
					kpt(0, list[#list]),
					kpt(0.5, list[#list - 1]),
					kpt(1, list[#list - 2])
				})
				counter = #list
				local function animate()
					create:Play()
					create.Completed:Wait() 
					gradient.Offset = startingPos 
					gradient.Rotation = 180
					if counter == #list - 1 and status == "down" then
						gradient.Color = s({
							kpt(0, gradient.Color.Keypoints[1].Value),
							kpt(0.5, list[#list]), 
							kpt(1, list[1]) 
						})
						counter = 1
						status = "up" 
					elseif counter == #list and status == "down" then 
						gradient.Color = s({
							kpt(0, gradient.Color.Keypoints[1].Value),
							kpt(0.5, list[1]),
							kpt(1, list[2])
						})
						counter = 2
						status = "up"
					elseif counter <= #list - 2 and status == "down" then 
						gradient.Color = s({
							kpt(0, gradient.Color.Keypoints[1].Value),
							kpt(0.5, list[counter + 1]), 
							kpt(1, list[counter + 2])
						})
						counter = counter + 2
						status = "up"
					end
					create:Play()
					create.Completed:Wait()
					gradient.Offset = startingPos
					gradient.Rotation = 0 
					if counter == #list - 1 and status == "up" then
						gradient.Color = s({ 

							kpt(0, list[1]), 
							kpt(0.5, list[#list]), 
							kpt(1, gradient.Color.Keypoints[3].Value)
						})
						counter = 1
						status = "down"
					elseif counter == #list and status == "up" then
						gradient.Color = s({
							kpt(0, list[2]),
							kpt(0.5, list[1]), 
							kpt(1, gradient.Color.Keypoints[3].Value)
						})
						counter = 2
						status = "down"
					elseif counter <= #list - 2 and status == "up" then
						gradient.Color = s({
							kpt(0, list[counter + 2]), 
							kpt(0.5, list[counter + 1]), 
							kpt(1, gradient.Color.Keypoints[3].Value) 	
						})
						counter = counter + 2
						status = "down"
					end
					animate()
				end
				animate()
			end
			coroutine.wrap(BFPY_fake_script)()

		end)

		UICorner_13.CornerRadius = UDim.new(0, 1)
		UICorner_13.Parent = FeBoobsandAssButton

		ReanimationsFrame.Name = "ReanimationsFrame"
		ReanimationsFrame.Parent = UIFrame
		ReanimationsFrame.Active = true
		ReanimationsFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		ReanimationsFrame.Position = UDim2.new(0.278219402, 0, 0.14054054, 0)
		ReanimationsFrame.Size = UDim2.new(0, 453, 0, 318)
		ReanimationsFrame.Visible = false

		UICorner_14.CornerRadius = UDim.new(0, 1)
		UICorner_14.Parent = ReanimationsFrame

		Reanimationv1dm.Name = "Reanimationv1dm"
		Reanimationv1dm.Parent = ReanimationsFrame
		Reanimationv1dm.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		Reanimationv1dm.Position = UDim2.new(0.097130239, 0, 0.113326117, 0)
		Reanimationv1dm.Size = UDim2.new(0, 364, 0, 41)
		Reanimationv1dm.Font = Enum.Font.GothamBlack
		Reanimationv1dm.Text = "Reanimation v1(Destroy Hat Meshes)"
		Reanimationv1dm.TextColor3 = Color3.fromRGB(255, 255, 255)
		Reanimationv1dm.TextSize = 14.000
		Reanimationv1dm.MouseButton1Down:Connect(function()
			for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
				if v:IsA("Accessory") then
					if v.Handle:FindFirstChildOfClass("Mesh") or v.Handle:FindFirstChildOfClass("SpecialMesh") then
						if v.Handle:FindFirstChildOfClass("SpecialMesh") then
							v.Handle:FindFirstChildOfClass("SpecialMesh"):Remove()
						end
					end
				end
			end

			for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
				if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then
					game:GetService("RunService").Heartbeat:connect(function()
						v.Velocity = Vector3.new(0,35,0)
						wait(0.5)
					end)
				end
			end

			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Electroware Notification";
				Text = "Elecroware Netless executed please wait untill your health is 0";
				Icon = "http://www.roblox.com/asset/?id=8724185099"})

			local netboost = 100 --velocity 
			--netboost usage: 
			--set to false to disable
			--vector3 if you dont want the velocity to change
			--number to change the velocity in real time with magnitude equal to the number
			local simradius = "shp" --simulation radius method
			--"shp" - sethiddenproperty
			--"ssr" - setsimulationradius
			--false - disable
			local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
			local newanimate = true --disables the animate script and enable after reanimation
			local discharscripts = true --disables all localScripts parented to your character before reanimation
			local R15toR6 = true --tries to convert your character to r6 if its r15
			local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
			local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
			local method = 3 --reanimation method
			--methods:
			--0 - breakJoints (takes [loadtime] seconds to laod)
			--1 - limbs
			--2 - limbs + anti respawn
			--3 - limbs + breakJoints after [loadtime] seconds
			--4 - remove humanoid + breakJoints
			--5 - remove humanoid + limbs
			local alignmode = 2 --AlignPosition mode
			--modes:
			--1 - AlignPosition rigidity enabled true
			--2 - 2 AlignPositions rigidity enabled both true and false
			--3 - AlignPosition rigidity enabled false
			local hedafterneck = true --disable aligns for head and enable after neck is removed

			local lp = game:GetService("Players").LocalPlayer
			local rs = game:GetService("RunService")
			local stepped = rs.Stepped
			local heartbeat = rs.Heartbeat
			local renderstepped = rs.RenderStepped
			local sg = game:GetService("StarterGui")
			local ws = game:GetService("Workspace")

			local c = lp.Character

			local function gp(parent, name, className)
				local ret = nil
				if parent then
					for i, v in pairs(parent:GetChildren()) do
						if (v.Name == name) and v:IsA(className) then
							ret = v
						end
					end
				end
				return ret
			end

			local function align(Part0, Part1)
				Part0.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001, 0.0001, 0.0001)

				local att1 = Instance.new("Attachment")
				att1.Orientation = Vector3.new(0, 0, 0)
				att1.Position = Vector3.new(0, 0, 0)
				att1.Archivable = true
				local att0 = att1:Clone()

				if (alignmode == 1) or (alignmode == 2) then
					local ape = Instance.new("AlignPosition", att0)
					ape.ApplyAtCenterOfMass = false
					ape.MaxForce = math.huge
					ape.MaxVelocity = math.huge
					ape.ReactionForceEnabled = false
					ape.Responsiveness = 200
					ape.Attachment1 = att1
					ape.Attachment0 = att0
					ape.Name = "AlignPositionRtrue"
					ape.RigidityEnabled = true
				end

				if (alignmode == 2) or (alignmode == 3) then
					local apd = Instance.new("AlignPosition", att0)
					apd.ApplyAtCenterOfMass = false
					apd.MaxForce = math.huge
					apd.MaxVelocity = math.huge
					apd.ReactionForceEnabled = false
					apd.Responsiveness = 200
					apd.Attachment1 = att1
					apd.Attachment0 = att0
					apd.Name = "AlignPositionRfalse"
					apd.RigidityEnabled = false
				end

				local ao = Instance.new("AlignOrientation", att0)
				ao.MaxAngularVelocity = math.huge
				ao.MaxTorque = math.huge
				ao.PrimaryAxisOnly = false
				ao.ReactionTorqueEnabled = false
				ao.Responsiveness = 200
				ao.Attachment1 = att1
				ao.Attachment0 = att0
				ao.RigidityEnabled = false

				att1.Parent = Part1
				att1.Name = "att1_" .. Part1.Name

				att0.Parent = Part0
				att0.Name = "att0_" .. Part0.Name

				if typeof(netboost) == "Vector3" then
					spawn(function()
						local vel = Vector3.new(0, 0, 0)
						while Part0 and Part0.Parent do
							Part0.Velocity = vel
							heartbeat:Wait()
							if Part0 and Part0.Parent then
								vel = Part0.Velocity
								Part0.Velocity = netboost
								stepped:Wait()
							end
						end
					end)
				end

				if typeof(netboost) == "number" then
					spawn(function()
						local vel = Vector3.new(0, 0, 0)
						while Part0 and Part0.Parent do
							Part0.Velocity = vel
							heartbeat:Wait()
							if Part0 and Part0.Parent then
								local newvel = vel
								local mag = newvel.Magnitude
								if mag < 0.1 then
									newvel = Vector3.new(0, netboost, 0)
								else
									local multiplier = netboost / mag
									newvel *= Vector3.new(multiplier,  multiplier, multiplier)
								end
								vel = Part0.Velocity
								Part0.Velocity = newvel
								stepped:Wait()
							end
						end
					end)
				end
			end

			local function respawnrequest()
				local c = lp.Character
				local ccfr = ws.CurrentCamera.CFrame
				local fc = Instance.new("Model")
				local nh = Instance.new("Humanoid", fc)
				lp.Character = fc
				nh.Health = 0
				lp.Character = c
				fc:Destroy()
				local con = nil
				local function confunc()
					con:Disconnect()
					ws.CurrentCamera.CFrame = ccfr
				end
				con = renderstepped:Connect(confunc)
			end

			local destroyhum = (method == 4) or (method == 5)
			local breakjoints = (method == 0) or (method == 4)
			local antirespawn = (method == 0) or (method == 2) or (method == 3)

			addtools = addtools and gp(lp, "Backpack", "Backpack")

			if not (c and c.Parent) then
				return
			end

			if simradius == "shp" then
				local shp = sethiddenproperty or set_hidden_property or set_hidden_prop or sethiddenprop
				if shp then
					spawn(function()
						while heartbeat:Wait() and c and c.Parent do
							shp(lp, "SimulationRadius", math.huge)
						end
					end)
				end
			end

			if simradius == "ssr" then
				local ssr = setsimulationradius or set_simulation_radius or set_sim_radius or setsimradius or set_simulation_rad or setsimulationrad
				if ssr then
					spawn(function()
						while stepped:Wait() and c and c.Parent do
							ssr(math.huge)
						end
					end)
				end
			end

			antiragdoll = antiragdoll and function(v)
				if v and v.Parent and (v:IsA("HingeConstraint") or v:IsA("BallSocketConstraint")) then
					v:Destroy()
				end
			end

			if antiragdoll then
				for i, v in pairs(c:GetDescendants()) do
					antiragdoll(v)
				end
				c.DescendantAdded:Connect(antiragdoll)
			end

			if antirespawn then
				respawnrequest()
			end

			if method == 0 then
				wait(loadtime)
				if not (c and c.Parent) then
					return
				end
			end

			if discharscripts then
				for i, v in pairs(c:GetChildren()) do
					if v and v.Parent and v:IsA("LocalScript") then
						v.Disabled = true
					end
				end
			elseif newanimate then
				local animate = gp(c, "Animate", "LocalScript")
				if animate and (not animate.Disabled) then
					animate.Disabled = true
				else
					newanimate = false
				end
			end

			local hum = c:FindFirstChildOfClass("Humanoid")
			if hum then
				for i, v in pairs(hum:GetPlayingAnimationTracks()) do
					v:Stop()
				end
			end

			if addtools then
				for i, v in pairs(addtools:GetChildren()) do
					if v and v.Parent and v:IsA("Tool") then
						v.Parent = c
					end
				end
			end

			pcall(function()
				settings().Physics.AllowSleep = false
				settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
			end)

			local OLDscripts = {}

			for i, v in pairs(c:GetDescendants()) do
				if v.ClassName == "Script" then
					table.insert(OLDscripts, v)
				end
			end

			local scriptNames = {}

			for i, v in pairs(c:GetDescendants()) do
				if v and v.Parent and v:IsA("BasePart") then
					local newName = tostring(i)
					local exists = true
					while exists do
						exists = false
						for i, v in pairs(OLDscripts) do
							if v.Name == newName then
								exists = true
							end
						end
						if exists then
							newName = newName .. "_"    
						end
					end
					table.insert(scriptNames, newName)
					Instance.new("Script", v).Name = newName
				end
			end

			c.Archivable = true
			local cl = c:Clone()
			for i, v in pairs(cl:GetDescendants()) do
				pcall(function()
					v.Transparency = 1
					v.Anchored = false
				end)
			end

			local model = Instance.new("Model", c)
			model.Name = model.ClassName

			for i, v in pairs(c:GetChildren()) do
				if v and v.Parent and (v ~= model) then
					if destroyhum and v:IsA("Humanoid") then
						v:Destroy()
					else
						if addtools and v:IsA("Tool") then
							for i1, v1 in pairs(v:GetDescendants()) do
								if v1 and v1.Parent and v1:IsA("BasePart") then
									local bv = Instance.new("BodyVelocity", v1)
									bv.Velocity = Vector3.new(0, 0, 0)
									bv.MaxForce = Vector3.new(1000, 1000, 1000)
									bv.P = 1250
									bv.Name = "bv_" .. v.Name
								end
							end
						end
						v.Parent = model
					end
				end
			end
			local head = gp(model, "Head", "BasePart")
			local torso = gp(model, "Torso", "BasePart") or gp(model, "UpperTorso", "BasePart")
			if breakjoints then
				model:BreakJoints()
			else
				if head and torso then
					for i, v in pairs(model:GetDescendants()) do
						if v and v.Parent and v:IsA("Weld") or v:IsA("Snap") or v:IsA("Glue") or v:IsA("Motor") or v:IsA("Motor6D") then
							local save = false
							if (v.Part0 == torso) and (v.Part1 == head) then
								save = true
							end
							if (v.Part0 == head) and (v.Part1 == torso) then
								save = true
							end
							if save then
								if hedafterneck then
									hedafterneck = v
								end
							else
								v:Destroy()
							end
						end
					end
				end
				if method == 3 then
					spawn(function()
						wait(loadtime)
						if model and model.Parent then
							model:BreakJoints()
						end
					end)
				end
			end

			cl.Parent = c
			for i, v in pairs(cl:GetChildren()) do
				if v and v.Parent then
					v.Parent = c
				end
			end
			cl:Destroy()

			local modelcolcon = nil
			local function modelcolf()
				if model and model.Parent then
					for i, v in pairs(model:GetDescendants()) do
						if v:IsA("BasePart") then
							v.CanCollide = false
						end
					end
				else
					modelcolcon:Disconnect()
				end
			end
			modelcolcon = stepped:Connect(modelcolf)
			modelcolf()

			for i, scr in pairs(model:GetDescendants()) do
				if scr and scr.Parent and (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
					local Part0 = scr.Parent
					if Part0:IsA("BasePart") then
						for i1, scr1 in pairs(c:GetDescendants()) do
							if scr1 and scr1.Parent and (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
								local Part1 = scr1.Parent
								if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
									align(Part0, Part1)
								end
							end
						end
					end
				end
			end

			if (typeof(hedafterneck) == "Instance") and head and head.Parent then
				local aligns = {}
				for i, v in pairs(head:GetDescendants()) do
					if v and v.Parent and (v:IsA("AlignPosition") or v:IsA("AlignOrientation")) then
						table.insert(aligns, v)
						v.Enabled = false
					end
				end
				spawn(function()
					while c and c.Parent and hedafterneck and hedafterneck.Parent do
						stepped:Wait()
					end
					if not (c and c.Parent and head and head.Parent) then
						return
					end
					for i, v in pairs(aligns) do
						pcall(function()
							v.Enabled = true
						end)
					end
				end)
			end

			for i, v in pairs(c:GetDescendants()) do
				if v and v.Parent then
					if v.ClassName == "Script" then
						if table.find(scriptNames, v.Name) then
							v:Destroy()
						end
					else
						if not v:IsDescendantOf(model) then
							if v:IsA("Decal") then
								v.Transparency = 1
							end
							if v:IsA("ForceField") then
								v.Visible = false
							end
							if v:IsA("Sound") then
								v.Playing = false
							end
							if v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") then
								v.Enabled = false
							end
						end
					end
				end
			end

			if newanimate then
				local animate = gp(c, "Animate", "LocalScript")
				if animate then
					animate.Disabled = false
				end
			end

			if addtools then
				for i, v in pairs(c:GetChildren()) do
					if v and v.Parent and v:IsA("Tool") then
						v.Parent = addtools
					end
				end
			end

			local hum0 = model:FindFirstChildOfClass("Humanoid")
			local hum1 = c:FindFirstChildOfClass("Humanoid")
			if hum1 then
				ws.CurrentCamera.CameraSubject = hum1
				spawn(function()
					renderstepped:Wait()
					if c and c.Parent and hum1 and (hum1.Parent == c) then
						ws.CurrentCamera.CameraSubject = hum1
					end
				end)
				if hum0 then
					hum0.Changed:Connect(function(prop)
						if (prop == "Jump") and hum1 and hum1.Parent then
							hum1.Jump = hum0.Jump
						end
					end)
				else
					lp.Character = nil
					lp.Character = c
				end
			end

			local rb = Instance.new("BindableEvent", c)
			rb.Event:Connect(function()
				rb:Destroy()
				sg:SetCore("ResetButtonCallback", true)
				if destroyhum then
					c:BreakJoints()
					return
				end
				if antirespawn then
					if hum0 and hum0.Parent and (hum0.Health > 0) then
						model:BreakJoints()
						hum0.Health = 0
					end
					respawnrequest()
				else
					if hum0 and hum0.Parent and (hum0.Health > 0) then
						model:BreakJoints()
						hum0.Health = 0
					end
				end
			end)
			sg:SetCore("ResetButtonCallback", rb)

			spawn(function()
				while c and c.Parent do
					if hum0 and hum0.Parent and hum1 and hum1.Parent then
						hum1.Jump = hum0.Jump
					end
					wait()
				end
				sg:SetCore("ResetButtonCallback", true)
			end)

			R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
			if R15toR6 then
				local cf = nil
				pcall(function()
					cf = gp(c, "HumanoidRootPart", "BasePart").CFrame
				end)
				if cf then
					local R6parts = { 
						head = {
							Name = "Head",
							Size = Vector3.new(2, 1, 1),
							R15 = {
								Head = 0
							}
						},
						torso = {
							Name = "Torso",
							Size = Vector3.new(2, 2, 1),
							R15 = {
								UpperTorso = 0.2,
								LowerTorso = -0.8
							}
						},
						root = {
							Name = "HumanoidRootPart",
							Size = Vector3.new(2, 2, 1),
							R15 = {
								HumanoidRootPart = 0
							}
						},
						leftArm = {
							Name = "Left Arm",
							Size = Vector3.new(1, 2, 1),
							R15 = {
								LeftHand = -0.85,
								LeftLowerArm = -0.2,
								LeftUpperArm = 0.4
							}
						},
						rightArm = {
							Name = "Right Arm",
							Size = Vector3.new(1, 2, 1),
							R15 = {
								RightHand = -0.85,
								RightLowerArm = -0.2,
								RightUpperArm = 0.4
							}
						},
						leftLeg = {
							Name = "Left Leg",
							Size = Vector3.new(1, 2, 1),
							R15 = {
								LeftFoot = -0.85,
								LeftLowerLeg = -0.15,
								LeftUpperLeg = 0.6
							}
						},
						rightLeg = {
							Name = "Right Leg",
							Size = Vector3.new(1, 2, 1),
							R15 = {
								RightFoot = -0.85,
								RightLowerLeg = -0.15,
								RightUpperLeg = 0.6
							}
						}
					}
					for i, v in pairs(c:GetChildren()) do
						if v:IsA("BasePart") then
							for i1, v1 in pairs(v:GetChildren()) do
								if v1:IsA("Motor6D") then
									v1.Part0 = nil
								end
							end
						end
					end
					for i, v in pairs(R6parts) do
						local part = Instance.new("Part")
						part.Name = v.Name
						part.Size = v.Size
						part.CFrame = cf
						part.Anchored = false
						part.Transparency = 1
						part.CanCollide = false
						for i1, v1 in pairs(v.R15) do
							local R15part = gp(c, i1, "BasePart")
							local att = gp(R15part, "att1_" .. i1, "Attachment")
							if R15part then
								local weld = Instance.new("Weld", R15part)
								weld.Part0 = part
								weld.Part1 = R15part
								weld.C0 = CFrame.new(0, v1, 0)
								weld.C1 = CFrame.new(0, 0, 0)
								R15part.Massless = true
								R15part.Name = "R15_" .. i1
								if att then
									att.Parent = part
									att.Position = Vector3.new(0, v1, 0)
									R15part.Parent = att
								else
									R15part.Parent = part
								end
							end
						end
						part.Parent = c
						R6parts[i] = part
					end
					local R6joints = {
						neck = {
							Parent = R6parts.torso,
							Name = "Neck",
							Part0 = R6parts.torso,
							Part1 = R6parts.head,
							C0 = CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
							C1 = CFrame.new(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
						},
						rootJoint = {
							Parent = R6parts.root,
							Name = "RootJoint" ,
							Part0 = R6parts.root,
							Part1 = R6parts.torso,
							C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
							C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
						},
						rightShoulder = {
							Parent = R6parts.torso,
							Name = "Right Shoulder",
							Part0 = R6parts.torso,
							Part1 = R6parts.rightArm,
							C0 = CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
							C1 = CFrame.new(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
						},
						leftShoulder = {
							Parent = R6parts.torso,
							Name = "Left Shoulder",
							Part0 = R6parts.torso,
							Part1 = R6parts.leftArm,
							C0 = CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
							C1 = CFrame.new(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						},
						rightHip = {
							Parent = R6parts.torso,
							Name = "Right Hip",
							Part0 = R6parts.torso,
							Part1 = R6parts.rightLeg,
							C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
							C1 = CFrame.new(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
						},
						leftHip = {
							Parent = R6parts.torso,
							Name = "Left Hip" ,
							Part0 = R6parts.torso,
							Part1 = R6parts.leftLeg,
							C0 = CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
							C1 = CFrame.new(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						}
					}
					for i, v in pairs(R6joints) do
						local joint = Instance.new("Motor6D")
						for prop, val in pairs(v) do
							joint[prop] = val
						end
						R6joints[i] = joint
					end
					hum1.RigType = Enum.HumanoidRigType.R6
					hum1.HipHeight = 0
				end
			end
		end)

		UICorner_15.CornerRadius = UDim.new(0, 1)
		UICorner_15.Parent = Reanimationv1dm

		FEpenisV3ReanimationButton.Name = "FEpenisV3ReanimationButton"
		FEpenisV3ReanimationButton.Parent = ReanimationsFrame
		FEpenisV3ReanimationButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		FEpenisV3ReanimationButton.Position = UDim2.new(0.097130239, 0, 0.206569359, 0)
		FEpenisV3ReanimationButton.Size = UDim2.new(0, 364, 0, 41)
		FEpenisV3ReanimationButton.Font = Enum.Font.GothamBlack
		FEpenisV3ReanimationButton.Text = "FE Penis v3 Reanimation"
		FEpenisV3ReanimationButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		FEpenisV3ReanimationButton.TextSize = 14.000
		FEpenisV3ReanimationButton.MouseButton1Down:Connect(function()
			game.Players.LocalPlayer.Character.InternationalFedora.Handle.SpecialMesh:Destroy()
			game.Players.LocalPlayer.Character.MeshPartAccessory.Handle.SpecialMesh:Destroy()
			game.Players.LocalPlayer.Character["Pal Hair"].Handle.Mesh:Destroy()
			game.Players.LocalPlayer.Character.LavanderHair.Handle.Mesh:Destroy()

			for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
				if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then
					game:GetService("RunService").Heartbeat:connect(function()
						v.Velocity = Vector3.new(0,35,0)
						wait(0.5)
					end)
				end
			end

			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Electroware Notification";
				Text = "Elecroware Netless executed please wait untill your health is 0";
				Icon = "http://www.roblox.com/asset/?id=8724185099"})

			local netboost = 100 --velocity 
			--netboost usage: 
			--set to false to disable
			--vector3 if you dont want the velocity to change
			--number to change the velocity in real time with magnitude equal to the number
			local simradius = "shp" --simulation radius method
			--"shp" - sethiddenproperty
			--"ssr" - setsimulationradius
			--false - disable
			local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
			local newanimate = true --disables the animate script and enable after reanimation
			local discharscripts = true --disables all localScripts parented to your character before reanimation
			local R15toR6 = true --tries to convert your character to r6 if its r15
			local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
			local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
			local method = 3 --reanimation method
			--methods:
			--0 - breakJoints (takes [loadtime] seconds to laod)
			--1 - limbs
			--2 - limbs + anti respawn
			--3 - limbs + breakJoints after [loadtime] seconds
			--4 - remove humanoid + breakJoints
			--5 - remove humanoid + limbs
			local alignmode = 2 --AlignPosition mode
			--modes:
			--1 - AlignPosition rigidity enabled true
			--2 - 2 AlignPositions rigidity enabled both true and false
			--3 - AlignPosition rigidity enabled false
			local hedafterneck = true --disable aligns for head and enable after neck is removed

			local lp = game:GetService("Players").LocalPlayer
			local rs = game:GetService("RunService")
			local stepped = rs.Stepped
			local heartbeat = rs.Heartbeat
			local renderstepped = rs.RenderStepped
			local sg = game:GetService("StarterGui")
			local ws = game:GetService("Workspace")

			local c = lp.Character

			local function gp(parent, name, className)
				local ret = nil
				if parent then
					for i, v in pairs(parent:GetChildren()) do
						if (v.Name == name) and v:IsA(className) then
							ret = v
						end
					end
				end
				return ret
			end

			local function align(Part0, Part1)
				Part0.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001, 0.0001, 0.0001)

				local att1 = Instance.new("Attachment")
				att1.Orientation = Vector3.new(0, 0, 0)
				att1.Position = Vector3.new(0, 0, 0)
				att1.Archivable = true
				local att0 = att1:Clone()

				if (alignmode == 1) or (alignmode == 2) then
					local ape = Instance.new("AlignPosition", att0)
					ape.ApplyAtCenterOfMass = false
					ape.MaxForce = math.huge
					ape.MaxVelocity = math.huge
					ape.ReactionForceEnabled = false
					ape.Responsiveness = 200
					ape.Attachment1 = att1
					ape.Attachment0 = att0
					ape.Name = "AlignPositionRtrue"
					ape.RigidityEnabled = true
				end

				if (alignmode == 2) or (alignmode == 3) then
					local apd = Instance.new("AlignPosition", att0)
					apd.ApplyAtCenterOfMass = false
					apd.MaxForce = math.huge
					apd.MaxVelocity = math.huge
					apd.ReactionForceEnabled = false
					apd.Responsiveness = 200
					apd.Attachment1 = att1
					apd.Attachment0 = att0
					apd.Name = "AlignPositionRfalse"
					apd.RigidityEnabled = false
				end

				local ao = Instance.new("AlignOrientation", att0)
				ao.MaxAngularVelocity = math.huge
				ao.MaxTorque = math.huge
				ao.PrimaryAxisOnly = false
				ao.ReactionTorqueEnabled = false
				ao.Responsiveness = 200
				ao.Attachment1 = att1
				ao.Attachment0 = att0
				ao.RigidityEnabled = false

				att1.Parent = Part1
				att1.Name = "att1_" .. Part1.Name

				att0.Parent = Part0
				att0.Name = "att0_" .. Part0.Name

				if typeof(netboost) == "Vector3" then
					spawn(function()
						local vel = Vector3.new(0, 0, 0)
						while Part0 and Part0.Parent do
							Part0.Velocity = vel
							heartbeat:Wait()
							if Part0 and Part0.Parent then
								vel = Part0.Velocity
								Part0.Velocity = netboost
								stepped:Wait()
							end
						end
					end)
				end

				if typeof(netboost) == "number" then
					spawn(function()
						local vel = Vector3.new(0, 0, 0)
						while Part0 and Part0.Parent do
							Part0.Velocity = vel
							heartbeat:Wait()
							if Part0 and Part0.Parent then
								local newvel = vel
								local mag = newvel.Magnitude
								if mag < 0.1 then
									newvel = Vector3.new(0, netboost, 0)
								else
									local multiplier = netboost / mag
									newvel *= Vector3.new(multiplier,  multiplier, multiplier)
								end
								vel = Part0.Velocity
								Part0.Velocity = newvel
								stepped:Wait()
							end
						end
					end)
				end
			end

			local function respawnrequest()
				local c = lp.Character
				local ccfr = ws.CurrentCamera.CFrame
				local fc = Instance.new("Model")
				local nh = Instance.new("Humanoid", fc)
				lp.Character = fc
				nh.Health = 0
				lp.Character = c
				fc:Destroy()
				local con = nil
				local function confunc()
					con:Disconnect()
					ws.CurrentCamera.CFrame = ccfr
				end
				con = renderstepped:Connect(confunc)
			end

			local destroyhum = (method == 4) or (method == 5)
			local breakjoints = (method == 0) or (method == 4)
			local antirespawn = (method == 0) or (method == 2) or (method == 3)

			addtools = addtools and gp(lp, "Backpack", "Backpack")

			if not (c and c.Parent) then
				return
			end

			if simradius == "shp" then
				local shp = sethiddenproperty or set_hidden_property or set_hidden_prop or sethiddenprop
				if shp then
					spawn(function()
						while heartbeat:Wait() and c and c.Parent do
							shp(lp, "SimulationRadius", math.huge)
						end
					end)
				end
			end

			if simradius == "ssr" then
				local ssr = setsimulationradius or set_simulation_radius or set_sim_radius or setsimradius or set_simulation_rad or setsimulationrad
				if ssr then
					spawn(function()
						while stepped:Wait() and c and c.Parent do
							ssr(math.huge)
						end
					end)
				end
			end

			antiragdoll = antiragdoll and function(v)
				if v and v.Parent and (v:IsA("HingeConstraint") or v:IsA("BallSocketConstraint")) then
					v:Destroy()
				end
			end

			if antiragdoll then
				for i, v in pairs(c:GetDescendants()) do
					antiragdoll(v)
				end
				c.DescendantAdded:Connect(antiragdoll)
			end

			if antirespawn then
				respawnrequest()
			end

			if method == 0 then
				wait(loadtime)
				if not (c and c.Parent) then
					return
				end
			end

			if discharscripts then
				for i, v in pairs(c:GetChildren()) do
					if v and v.Parent and v:IsA("LocalScript") then
						v.Disabled = true
					end
				end
			elseif newanimate then
				local animate = gp(c, "Animate", "LocalScript")
				if animate and (not animate.Disabled) then
					animate.Disabled = true
				else
					newanimate = false
				end
			end

			local hum = c:FindFirstChildOfClass("Humanoid")
			if hum then
				for i, v in pairs(hum:GetPlayingAnimationTracks()) do
					v:Stop()
				end
			end

			if addtools then
				for i, v in pairs(addtools:GetChildren()) do
					if v and v.Parent and v:IsA("Tool") then
						v.Parent = c
					end
				end
			end

			pcall(function()
				settings().Physics.AllowSleep = false
				settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
			end)

			local OLDscripts = {}

			for i, v in pairs(c:GetDescendants()) do
				if v.ClassName == "Script" then
					table.insert(OLDscripts, v)
				end
			end

			local scriptNames = {}

			for i, v in pairs(c:GetDescendants()) do
				if v and v.Parent and v:IsA("BasePart") then
					local newName = tostring(i)
					local exists = true
					while exists do
						exists = false
						for i, v in pairs(OLDscripts) do
							if v.Name == newName then
								exists = true
							end
						end
						if exists then
							newName = newName .. "_"    
						end
					end
					table.insert(scriptNames, newName)
					Instance.new("Script", v).Name = newName
				end
			end

			c.Archivable = true
			local cl = c:Clone()
			for i, v in pairs(cl:GetDescendants()) do
				pcall(function()
					v.Transparency = 1
					v.Anchored = false
				end)
			end

			local model = Instance.new("Model", c)
			model.Name = model.ClassName

			for i, v in pairs(c:GetChildren()) do
				if v and v.Parent and (v ~= model) then
					if destroyhum and v:IsA("Humanoid") then
						v:Destroy()
					else
						if addtools and v:IsA("Tool") then
							for i1, v1 in pairs(v:GetDescendants()) do
								if v1 and v1.Parent and v1:IsA("BasePart") then
									local bv = Instance.new("BodyVelocity", v1)
									bv.Velocity = Vector3.new(0, 0, 0)
									bv.MaxForce = Vector3.new(1000, 1000, 1000)
									bv.P = 1250
									bv.Name = "bv_" .. v.Name
								end
							end
						end
						v.Parent = model
					end
				end
			end
			local head = gp(model, "Head", "BasePart")
			local torso = gp(model, "Torso", "BasePart") or gp(model, "UpperTorso", "BasePart")
			if breakjoints then
				model:BreakJoints()
			else
				if head and torso then
					for i, v in pairs(model:GetDescendants()) do
						if v and v.Parent and v:IsA("Weld") or v:IsA("Snap") or v:IsA("Glue") or v:IsA("Motor") or v:IsA("Motor6D") then
							local save = false
							if (v.Part0 == torso) and (v.Part1 == head) then
								save = true
							end
							if (v.Part0 == head) and (v.Part1 == torso) then
								save = true
							end
							if save then
								if hedafterneck then
									hedafterneck = v
								end
							else
								v:Destroy()
							end
						end
					end
				end
				if method == 3 then
					spawn(function()
						wait(loadtime)
						if model and model.Parent then
							model:BreakJoints()
						end
					end)
				end
			end

			cl.Parent = c
			for i, v in pairs(cl:GetChildren()) do
				if v and v.Parent then
					v.Parent = c
				end
			end
			cl:Destroy()

			local modelcolcon = nil
			local function modelcolf()
				if model and model.Parent then
					for i, v in pairs(model:GetDescendants()) do
						if v:IsA("BasePart") then
							v.CanCollide = false
						end
					end
				else
					modelcolcon:Disconnect()
				end
			end
			modelcolcon = stepped:Connect(modelcolf)
			modelcolf()

			for i, scr in pairs(model:GetDescendants()) do
				if scr and scr.Parent and (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
					local Part0 = scr.Parent
					if Part0:IsA("BasePart") then
						for i1, scr1 in pairs(c:GetDescendants()) do
							if scr1 and scr1.Parent and (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
								local Part1 = scr1.Parent
								if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
									align(Part0, Part1)
								end
							end
						end
					end
				end
			end

			if (typeof(hedafterneck) == "Instance") and head and head.Parent then
				local aligns = {}
				for i, v in pairs(head:GetDescendants()) do
					if v and v.Parent and (v:IsA("AlignPosition") or v:IsA("AlignOrientation")) then
						table.insert(aligns, v)
						v.Enabled = false
					end
				end
				spawn(function()
					while c and c.Parent and hedafterneck and hedafterneck.Parent do
						stepped:Wait()
					end
					if not (c and c.Parent and head and head.Parent) then
						return
					end
					for i, v in pairs(aligns) do
						pcall(function()
							v.Enabled = true
						end)
					end
				end)
			end

			for i, v in pairs(c:GetDescendants()) do
				if v and v.Parent then
					if v.ClassName == "Script" then
						if table.find(scriptNames, v.Name) then
							v:Destroy()
						end
					else
						if not v:IsDescendantOf(model) then
							if v:IsA("Decal") then
								v.Transparency = 1
							end
							if v:IsA("ForceField") then
								v.Visible = false
							end
							if v:IsA("Sound") then
								v.Playing = false
							end
							if v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") then
								v.Enabled = false
							end
						end
					end
				end
			end

			if newanimate then
				local animate = gp(c, "Animate", "LocalScript")
				if animate then
					animate.Disabled = false
				end
			end

			if addtools then
				for i, v in pairs(c:GetChildren()) do
					if v and v.Parent and v:IsA("Tool") then
						v.Parent = addtools
					end
				end
			end

			local hum0 = model:FindFirstChildOfClass("Humanoid")
			local hum1 = c:FindFirstChildOfClass("Humanoid")
			if hum1 then
				ws.CurrentCamera.CameraSubject = hum1
				spawn(function()
					renderstepped:Wait()
					if c and c.Parent and hum1 and (hum1.Parent == c) then
						ws.CurrentCamera.CameraSubject = hum1
					end
				end)
				if hum0 then
					hum0.Changed:Connect(function(prop)
						if (prop == "Jump") and hum1 and hum1.Parent then
							hum1.Jump = hum0.Jump
						end
					end)
				else
					lp.Character = nil
					lp.Character = c
				end
			end

			local rb = Instance.new("BindableEvent", c)
			rb.Event:Connect(function()
				rb:Destroy()
				sg:SetCore("ResetButtonCallback", true)
				if destroyhum then
					c:BreakJoints()
					return
				end
				if antirespawn then
					if hum0 and hum0.Parent and (hum0.Health > 0) then
						model:BreakJoints()
						hum0.Health = 0
					end
					respawnrequest()
				else
					if hum0 and hum0.Parent and (hum0.Health > 0) then
						model:BreakJoints()
						hum0.Health = 0
					end
				end
			end)
			sg:SetCore("ResetButtonCallback", rb)

			spawn(function()
				while c and c.Parent do
					if hum0 and hum0.Parent and hum1 and hum1.Parent then
						hum1.Jump = hum0.Jump
					end
					wait()
				end
				sg:SetCore("ResetButtonCallback", true)
			end)

			R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
			if R15toR6 then
				local cf = nil
				pcall(function()
					cf = gp(c, "HumanoidRootPart", "BasePart").CFrame
				end)
				if cf then
					local R6parts = { 
						head = {
							Name = "Head",
							Size = Vector3.new(2, 1, 1),
							R15 = {
								Head = 0
							}
						},
						torso = {
							Name = "Torso",
							Size = Vector3.new(2, 2, 1),
							R15 = {
								UpperTorso = 0.2,
								LowerTorso = -0.8
							}
						},
						root = {
							Name = "HumanoidRootPart",
							Size = Vector3.new(2, 2, 1),
							R15 = {
								HumanoidRootPart = 0
							}
						},
						leftArm = {
							Name = "Left Arm",
							Size = Vector3.new(1, 2, 1),
							R15 = {
								LeftHand = -0.85,
								LeftLowerArm = -0.2,
								LeftUpperArm = 0.4
							}
						},
						rightArm = {
							Name = "Right Arm",
							Size = Vector3.new(1, 2, 1),
							R15 = {
								RightHand = -0.85,
								RightLowerArm = -0.2,
								RightUpperArm = 0.4
							}
						},
						leftLeg = {
							Name = "Left Leg",
							Size = Vector3.new(1, 2, 1),
							R15 = {
								LeftFoot = -0.85,
								LeftLowerLeg = -0.15,
								LeftUpperLeg = 0.6
							}
						},
						rightLeg = {
							Name = "Right Leg",
							Size = Vector3.new(1, 2, 1),
							R15 = {
								RightFoot = -0.85,
								RightLowerLeg = -0.15,
								RightUpperLeg = 0.6
							}
						}
					}
					for i, v in pairs(c:GetChildren()) do
						if v:IsA("BasePart") then
							for i1, v1 in pairs(v:GetChildren()) do
								if v1:IsA("Motor6D") then
									v1.Part0 = nil
								end
							end
						end
					end
					for i, v in pairs(R6parts) do
						local part = Instance.new("Part")
						part.Name = v.Name
						part.Size = v.Size
						part.CFrame = cf
						part.Anchored = false
						part.Transparency = 1
						part.CanCollide = false
						for i1, v1 in pairs(v.R15) do
							local R15part = gp(c, i1, "BasePart")
							local att = gp(R15part, "att1_" .. i1, "Attachment")
							if R15part then
								local weld = Instance.new("Weld", R15part)
								weld.Part0 = part
								weld.Part1 = R15part
								weld.C0 = CFrame.new(0, v1, 0)
								weld.C1 = CFrame.new(0, 0, 0)
								R15part.Massless = true
								R15part.Name = "R15_" .. i1
								if att then
									att.Parent = part
									att.Position = Vector3.new(0, v1, 0)
									R15part.Parent = att
								else
									R15part.Parent = part
								end
							end
						end
						part.Parent = c
						R6parts[i] = part
					end
					local R6joints = {
						neck = {
							Parent = R6parts.torso,
							Name = "Neck",
							Part0 = R6parts.torso,
							Part1 = R6parts.head,
							C0 = CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
							C1 = CFrame.new(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
						},
						rootJoint = {
							Parent = R6parts.root,
							Name = "RootJoint" ,
							Part0 = R6parts.root,
							Part1 = R6parts.torso,
							C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
							C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
						},
						rightShoulder = {
							Parent = R6parts.torso,
							Name = "Right Shoulder",
							Part0 = R6parts.torso,
							Part1 = R6parts.rightArm,
							C0 = CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
							C1 = CFrame.new(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
						},
						leftShoulder = {
							Parent = R6parts.torso,
							Name = "Left Shoulder",
							Part0 = R6parts.torso,
							Part1 = R6parts.leftArm,
							C0 = CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
							C1 = CFrame.new(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						},
						rightHip = {
							Parent = R6parts.torso,
							Name = "Right Hip",
							Part0 = R6parts.torso,
							Part1 = R6parts.rightLeg,
							C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
							C1 = CFrame.new(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
						},
						leftHip = {
							Parent = R6parts.torso,
							Name = "Left Hip" ,
							Part0 = R6parts.torso,
							Part1 = R6parts.leftLeg,
							C0 = CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
							C1 = CFrame.new(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						}
					}
					for i, v in pairs(R6joints) do
						local joint = Instance.new("Motor6D")
						for prop, val in pairs(v) do
							joint[prop] = val
						end
						R6joints[i] = joint
					end
					hum1.RigType = Enum.HumanoidRigType.R6
					hum1.HipHeight = 0
				end
			end
		end)

		UICorner_16.CornerRadius = UDim.new(0, 1)
		UICorner_16.Parent = FEpenisV3ReanimationButton

		Reanimationv1Button.Name = "Reanimationv1Button"
		Reanimationv1Button.Parent = ReanimationsFrame
		Reanimationv1Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		Reanimationv1Button.Position = UDim2.new(0.097130239, 0, 0.0241369307, 0)
		Reanimationv1Button.Size = UDim2.new(0, 364, 0, 41)
		Reanimationv1Button.Font = Enum.Font.GothamBlack
		Reanimationv1Button.Text = "Reanimation v1"
		Reanimationv1Button.TextColor3 = Color3.fromRGB(255, 255, 255)
		Reanimationv1Button.TextSize = 14.000
		Reanimationv1Button.MouseButton1Down:Connect(function()
			for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
				if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then
					game:GetService("RunService").Heartbeat:connect(function()
						v.Velocity = Vector3.new(0,35,0)
						wait(0.5)
					end)
				end
			end

			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Electroware Notification";
				Text = "Elecroware Netless executed please wait untill your health is 0";
				Icon = "http://www.roblox.com/asset/?id=8724185099"})

			local netboost = 100 --velocity 
			--netboost usage: 
			--set to false to disable
			--vector3 if you dont want the velocity to change
			--number to change the velocity in real time with magnitude equal to the number
			local simradius = "shp" --simulation radius method
			--"shp" - sethiddenproperty
			--"ssr" - setsimulationradius
			--false - disable
			local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
			local newanimate = true --disables the animate script and enable after reanimation
			local discharscripts = true --disables all localScripts parented to your character before reanimation
			local R15toR6 = true --tries to convert your character to r6 if its r15
			local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
			local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
			local method = 3 --reanimation method
			--methods:
			--0 - breakJoints (takes [loadtime] seconds to laod)
			--1 - limbs
			--2 - limbs + anti respawn
			--3 - limbs + breakJoints after [loadtime] seconds
			--4 - remove humanoid + breakJoints
			--5 - remove humanoid + limbs
			local alignmode = 2 --AlignPosition mode
			--modes:
			--1 - AlignPosition rigidity enabled true
			--2 - 2 AlignPositions rigidity enabled both true and false
			--3 - AlignPosition rigidity enabled false
			local hedafterneck = true --disable aligns for head and enable after neck is removed

			local lp = game:GetService("Players").LocalPlayer
			local rs = game:GetService("RunService")
			local stepped = rs.Stepped
			local heartbeat = rs.Heartbeat
			local renderstepped = rs.RenderStepped
			local sg = game:GetService("StarterGui")
			local ws = game:GetService("Workspace")

			local c = lp.Character

			local function gp(parent, name, className)
				local ret = nil
				if parent then
					for i, v in pairs(parent:GetChildren()) do
						if (v.Name == name) and v:IsA(className) then
							ret = v
						end
					end
				end
				return ret
			end

			local function align(Part0, Part1)
				Part0.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001, 0.0001, 0.0001)

				local att1 = Instance.new("Attachment")
				att1.Orientation = Vector3.new(0, 0, 0)
				att1.Position = Vector3.new(0, 0, 0)
				att1.Archivable = true
				local att0 = att1:Clone()

				if (alignmode == 1) or (alignmode == 2) then
					local ape = Instance.new("AlignPosition", att0)
					ape.ApplyAtCenterOfMass = false
					ape.MaxForce = math.huge
					ape.MaxVelocity = math.huge
					ape.ReactionForceEnabled = false
					ape.Responsiveness = 200
					ape.Attachment1 = att1
					ape.Attachment0 = att0
					ape.Name = "AlignPositionRtrue"
					ape.RigidityEnabled = true
				end

				if (alignmode == 2) or (alignmode == 3) then
					local apd = Instance.new("AlignPosition", att0)
					apd.ApplyAtCenterOfMass = false
					apd.MaxForce = math.huge
					apd.MaxVelocity = math.huge
					apd.ReactionForceEnabled = false
					apd.Responsiveness = 200
					apd.Attachment1 = att1
					apd.Attachment0 = att0
					apd.Name = "AlignPositionRfalse"
					apd.RigidityEnabled = false
				end

				local ao = Instance.new("AlignOrientation", att0)
				ao.MaxAngularVelocity = math.huge
				ao.MaxTorque = math.huge
				ao.PrimaryAxisOnly = false
				ao.ReactionTorqueEnabled = false
				ao.Responsiveness = 200
				ao.Attachment1 = att1
				ao.Attachment0 = att0
				ao.RigidityEnabled = false

				att1.Parent = Part1
				att1.Name = "att1_" .. Part1.Name

				att0.Parent = Part0
				att0.Name = "att0_" .. Part0.Name

				if typeof(netboost) == "Vector3" then
					spawn(function()
						local vel = Vector3.new(0, 0, 0)
						while Part0 and Part0.Parent do
							Part0.Velocity = vel
							heartbeat:Wait()
							if Part0 and Part0.Parent then
								vel = Part0.Velocity
								Part0.Velocity = netboost
								stepped:Wait()
							end
						end
					end)
				end

				if typeof(netboost) == "number" then
					spawn(function()
						local vel = Vector3.new(0, 0, 0)
						while Part0 and Part0.Parent do
							Part0.Velocity = vel
							heartbeat:Wait()
							if Part0 and Part0.Parent then
								local newvel = vel
								local mag = newvel.Magnitude
								if mag < 0.1 then
									newvel = Vector3.new(0, netboost, 0)
								else
									local multiplier = netboost / mag
									newvel *= Vector3.new(multiplier,  multiplier, multiplier)
								end
								vel = Part0.Velocity
								Part0.Velocity = newvel
								stepped:Wait()
							end
						end
					end)
				end
			end

			local function respawnrequest()
				local c = lp.Character
				local ccfr = ws.CurrentCamera.CFrame
				local fc = Instance.new("Model")
				local nh = Instance.new("Humanoid", fc)
				lp.Character = fc
				nh.Health = 0
				lp.Character = c
				fc:Destroy()
				local con = nil
				local function confunc()
					con:Disconnect()
					ws.CurrentCamera.CFrame = ccfr
				end
				con = renderstepped:Connect(confunc)
			end

			local destroyhum = (method == 4) or (method == 5)
			local breakjoints = (method == 0) or (method == 4)
			local antirespawn = (method == 0) or (method == 2) or (method == 3)

			addtools = addtools and gp(lp, "Backpack", "Backpack")

			if not (c and c.Parent) then
				return
			end

			if simradius == "shp" then
				local shp = sethiddenproperty or set_hidden_property or set_hidden_prop or sethiddenprop
				if shp then
					spawn(function()
						while heartbeat:Wait() and c and c.Parent do
							shp(lp, "SimulationRadius", math.huge)
						end
					end)
				end
			end

			if simradius == "ssr" then
				local ssr = setsimulationradius or set_simulation_radius or set_sim_radius or setsimradius or set_simulation_rad or setsimulationrad
				if ssr then
					spawn(function()
						while stepped:Wait() and c and c.Parent do
							ssr(math.huge)
						end
					end)
				end
			end

			antiragdoll = antiragdoll and function(v)
				if v and v.Parent and (v:IsA("HingeConstraint") or v:IsA("BallSocketConstraint")) then
					v:Destroy()
				end
			end

			if antiragdoll then
				for i, v in pairs(c:GetDescendants()) do
					antiragdoll(v)
				end
				c.DescendantAdded:Connect(antiragdoll)
			end

			if antirespawn then
				respawnrequest()
			end

			if method == 0 then
				wait(loadtime)
				if not (c and c.Parent) then
					return
				end
			end

			if discharscripts then
				for i, v in pairs(c:GetChildren()) do
					if v and v.Parent and v:IsA("LocalScript") then
						v.Disabled = true
					end
				end
			elseif newanimate then
				local animate = gp(c, "Animate", "LocalScript")
				if animate and (not animate.Disabled) then
					animate.Disabled = true
				else
					newanimate = false
				end
			end

			local hum = c:FindFirstChildOfClass("Humanoid")
			if hum then
				for i, v in pairs(hum:GetPlayingAnimationTracks()) do
					v:Stop()
				end
			end

			if addtools then
				for i, v in pairs(addtools:GetChildren()) do
					if v and v.Parent and v:IsA("Tool") then
						v.Parent = c
					end
				end
			end

			pcall(function()
				settings().Physics.AllowSleep = false
				settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
			end)

			local OLDscripts = {}

			for i, v in pairs(c:GetDescendants()) do
				if v.ClassName == "Script" then
					table.insert(OLDscripts, v)
				end
			end

			local scriptNames = {}

			for i, v in pairs(c:GetDescendants()) do
				if v and v.Parent and v:IsA("BasePart") then
					local newName = tostring(i)
					local exists = true
					while exists do
						exists = false
						for i, v in pairs(OLDscripts) do
							if v.Name == newName then
								exists = true
							end
						end
						if exists then
							newName = newName .. "_"    
						end
					end
					table.insert(scriptNames, newName)
					Instance.new("Script", v).Name = newName
				end
			end

			c.Archivable = true
			local cl = c:Clone()
			for i, v in pairs(cl:GetDescendants()) do
				pcall(function()
					v.Transparency = 1
					v.Anchored = false
				end)
			end

			local model = Instance.new("Model", c)
			model.Name = model.ClassName

			for i, v in pairs(c:GetChildren()) do
				if v and v.Parent and (v ~= model) then
					if destroyhum and v:IsA("Humanoid") then
						v:Destroy()
					else
						if addtools and v:IsA("Tool") then
							for i1, v1 in pairs(v:GetDescendants()) do
								if v1 and v1.Parent and v1:IsA("BasePart") then
									local bv = Instance.new("BodyVelocity", v1)
									bv.Velocity = Vector3.new(0, 0, 0)
									bv.MaxForce = Vector3.new(1000, 1000, 1000)
									bv.P = 1250
									bv.Name = "bv_" .. v.Name
								end
							end
						end
						v.Parent = model
					end
				end
			end
			local head = gp(model, "Head", "BasePart")
			local torso = gp(model, "Torso", "BasePart") or gp(model, "UpperTorso", "BasePart")
			if breakjoints then
				model:BreakJoints()
			else
				if head and torso then
					for i, v in pairs(model:GetDescendants()) do
						if v and v.Parent and v:IsA("Weld") or v:IsA("Snap") or v:IsA("Glue") or v:IsA("Motor") or v:IsA("Motor6D") then
							local save = false
							if (v.Part0 == torso) and (v.Part1 == head) then
								save = true
							end
							if (v.Part0 == head) and (v.Part1 == torso) then
								save = true
							end
							if save then
								if hedafterneck then
									hedafterneck = v
								end
							else
								v:Destroy()
							end
						end
					end
				end
				if method == 3 then
					spawn(function()
						wait(loadtime)
						if model and model.Parent then
							model:BreakJoints()
						end
					end)
				end
			end

			cl.Parent = c
			for i, v in pairs(cl:GetChildren()) do
				if v and v.Parent then
					v.Parent = c
				end
			end
			cl:Destroy()

			local modelcolcon = nil
			local function modelcolf()
				if model and model.Parent then
					for i, v in pairs(model:GetDescendants()) do
						if v:IsA("BasePart") then
							v.CanCollide = false
						end
					end
				else
					modelcolcon:Disconnect()
				end
			end
			modelcolcon = stepped:Connect(modelcolf)
			modelcolf()

			for i, scr in pairs(model:GetDescendants()) do
				if scr and scr.Parent and (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
					local Part0 = scr.Parent
					if Part0:IsA("BasePart") then
						for i1, scr1 in pairs(c:GetDescendants()) do
							if scr1 and scr1.Parent and (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
								local Part1 = scr1.Parent
								if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
									align(Part0, Part1)
								end
							end
						end
					end
				end
			end

			if (typeof(hedafterneck) == "Instance") and head and head.Parent then
				local aligns = {}
				for i, v in pairs(head:GetDescendants()) do
					if v and v.Parent and (v:IsA("AlignPosition") or v:IsA("AlignOrientation")) then
						table.insert(aligns, v)
						v.Enabled = false
					end
				end
				spawn(function()
					while c and c.Parent and hedafterneck and hedafterneck.Parent do
						stepped:Wait()
					end
					if not (c and c.Parent and head and head.Parent) then
						return
					end
					for i, v in pairs(aligns) do
						pcall(function()
							v.Enabled = true
						end)
					end
				end)
			end

			for i, v in pairs(c:GetDescendants()) do
				if v and v.Parent then
					if v.ClassName == "Script" then
						if table.find(scriptNames, v.Name) then
							v:Destroy()
						end
					else
						if not v:IsDescendantOf(model) then
							if v:IsA("Decal") then
								v.Transparency = 1
							end
							if v:IsA("ForceField") then
								v.Visible = false
							end
							if v:IsA("Sound") then
								v.Playing = false
							end
							if v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") then
								v.Enabled = false
							end
						end
					end
				end
			end

			if newanimate then
				local animate = gp(c, "Animate", "LocalScript")
				if animate then
					animate.Disabled = false
				end
			end

			if addtools then
				for i, v in pairs(c:GetChildren()) do
					if v and v.Parent and v:IsA("Tool") then
						v.Parent = addtools
					end
				end
			end

			local hum0 = model:FindFirstChildOfClass("Humanoid")
			local hum1 = c:FindFirstChildOfClass("Humanoid")
			if hum1 then
				ws.CurrentCamera.CameraSubject = hum1
				spawn(function()
					renderstepped:Wait()
					if c and c.Parent and hum1 and (hum1.Parent == c) then
						ws.CurrentCamera.CameraSubject = hum1
					end
				end)
				if hum0 then
					hum0.Changed:Connect(function(prop)
						if (prop == "Jump") and hum1 and hum1.Parent then
							hum1.Jump = hum0.Jump
						end
					end)
				else
					lp.Character = nil
					lp.Character = c
				end
			end

			local rb = Instance.new("BindableEvent", c)
			rb.Event:Connect(function()
				rb:Destroy()
				sg:SetCore("ResetButtonCallback", true)
				if destroyhum then
					c:BreakJoints()
					return
				end
				if antirespawn then
					if hum0 and hum0.Parent and (hum0.Health > 0) then
						model:BreakJoints()
						hum0.Health = 0
					end
					respawnrequest()
				else
					if hum0 and hum0.Parent and (hum0.Health > 0) then
						model:BreakJoints()
						hum0.Health = 0
					end
				end
			end)
			sg:SetCore("ResetButtonCallback", rb)

			spawn(function()
				while c and c.Parent do
					if hum0 and hum0.Parent and hum1 and hum1.Parent then
						hum1.Jump = hum0.Jump
					end
					wait()
				end
				sg:SetCore("ResetButtonCallback", true)
			end)

			R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
			if R15toR6 then
				local cf = nil
				pcall(function()
					cf = gp(c, "HumanoidRootPart", "BasePart").CFrame
				end)
				if cf then
					local R6parts = { 
						head = {
							Name = "Head",
							Size = Vector3.new(2, 1, 1),
							R15 = {
								Head = 0
							}
						},
						torso = {
							Name = "Torso",
							Size = Vector3.new(2, 2, 1),
							R15 = {
								UpperTorso = 0.2,
								LowerTorso = -0.8
							}
						},
						root = {
							Name = "HumanoidRootPart",
							Size = Vector3.new(2, 2, 1),
							R15 = {
								HumanoidRootPart = 0
							}
						},
						leftArm = {
							Name = "Left Arm",
							Size = Vector3.new(1, 2, 1),
							R15 = {
								LeftHand = -0.85,
								LeftLowerArm = -0.2,
								LeftUpperArm = 0.4
							}
						},
						rightArm = {
							Name = "Right Arm",
							Size = Vector3.new(1, 2, 1),
							R15 = {
								RightHand = -0.85,
								RightLowerArm = -0.2,
								RightUpperArm = 0.4
							}
						},
						leftLeg = {
							Name = "Left Leg",
							Size = Vector3.new(1, 2, 1),
							R15 = {
								LeftFoot = -0.85,
								LeftLowerLeg = -0.15,
								LeftUpperLeg = 0.6
							}
						},
						rightLeg = {
							Name = "Right Leg",
							Size = Vector3.new(1, 2, 1),
							R15 = {
								RightFoot = -0.85,
								RightLowerLeg = -0.15,
								RightUpperLeg = 0.6
							}
						}
					}
					for i, v in pairs(c:GetChildren()) do
						if v:IsA("BasePart") then
							for i1, v1 in pairs(v:GetChildren()) do
								if v1:IsA("Motor6D") then
									v1.Part0 = nil
								end
							end
						end
					end
					for i, v in pairs(R6parts) do
						local part = Instance.new("Part")
						part.Name = v.Name
						part.Size = v.Size
						part.CFrame = cf
						part.Anchored = false
						part.Transparency = 1
						part.CanCollide = false
						for i1, v1 in pairs(v.R15) do
							local R15part = gp(c, i1, "BasePart")
							local att = gp(R15part, "att1_" .. i1, "Attachment")
							if R15part then
								local weld = Instance.new("Weld", R15part)
								weld.Part0 = part
								weld.Part1 = R15part
								weld.C0 = CFrame.new(0, v1, 0)
								weld.C1 = CFrame.new(0, 0, 0)
								R15part.Massless = true
								R15part.Name = "R15_" .. i1
								if att then
									att.Parent = part
									att.Position = Vector3.new(0, v1, 0)
									R15part.Parent = att
								else
									R15part.Parent = part
								end
							end
						end
						part.Parent = c
						R6parts[i] = part
					end
					local R6joints = {
						neck = {
							Parent = R6parts.torso,
							Name = "Neck",
							Part0 = R6parts.torso,
							Part1 = R6parts.head,
							C0 = CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
							C1 = CFrame.new(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
						},
						rootJoint = {
							Parent = R6parts.root,
							Name = "RootJoint" ,
							Part0 = R6parts.root,
							Part1 = R6parts.torso,
							C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
							C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
						},
						rightShoulder = {
							Parent = R6parts.torso,
							Name = "Right Shoulder",
							Part0 = R6parts.torso,
							Part1 = R6parts.rightArm,
							C0 = CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
							C1 = CFrame.new(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
						},
						leftShoulder = {
							Parent = R6parts.torso,
							Name = "Left Shoulder",
							Part0 = R6parts.torso,
							Part1 = R6parts.leftArm,
							C0 = CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
							C1 = CFrame.new(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						},
						rightHip = {
							Parent = R6parts.torso,
							Name = "Right Hip",
							Part0 = R6parts.torso,
							Part1 = R6parts.rightLeg,
							C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
							C1 = CFrame.new(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
						},
						leftHip = {
							Parent = R6parts.torso,
							Name = "Left Hip" ,
							Part0 = R6parts.torso,
							Part1 = R6parts.leftLeg,
							C0 = CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
							C1 = CFrame.new(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						}
					}
					for i, v in pairs(R6joints) do
						local joint = Instance.new("Motor6D")
						for prop, val in pairs(v) do
							joint[prop] = val
						end
						R6joints[i] = joint
					end
					hum1.RigType = Enum.HumanoidRigType.R6
					hum1.HipHeight = 0
				end
			end
		end)

		UICorner_17.CornerRadius = UDim.new(0, 1)
		UICorner_17.Parent = Reanimationv1Button

		NeededHatsFrame.Name = "NeededHatsFrame"
		NeededHatsFrame.Parent = UIFrame
		NeededHatsFrame.Active = true
		NeededHatsFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		NeededHatsFrame.Position = UDim2.new(0.278219402, 0, 0.14054054, 0)
		NeededHatsFrame.Size = UDim2.new(0, 453, 0, 318)
		NeededHatsFrame.Visible = false

		UICorner_18.CornerRadius = UDim.new(0, 1)
		UICorner_18.Parent = NeededHatsFrame

		CopyPPv1HatsButton.Name = "CopyPPv1HatsButton"
		CopyPPv1HatsButton.Parent = NeededHatsFrame
		CopyPPv1HatsButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		CopyPPv1HatsButton.Position = UDim2.new(0.097130239, 0, 0.0241369307, 0)
		CopyPPv1HatsButton.Size = UDim2.new(0, 364, 0, 41)
		CopyPPv1HatsButton.Font = Enum.Font.GothamBlack
		CopyPPv1HatsButton.Text = "Copy FE Penis v1 hat Ids"
		CopyPPv1HatsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		CopyPPv1HatsButton.TextSize = 14.000
		CopyPPv1HatsButton.MouseButton1Down:Connect(function()
			setclipboard("3992084515, 4246228452, 1103003368")
		end)

		UICorner_19.CornerRadius = UDim.new(0, 1)
		UICorner_19.Parent = CopyPPv1HatsButton

		CopyPPv2HatsButton.Name = "CopyPPv2HatsButton"
		CopyPPv2HatsButton.Parent = NeededHatsFrame
		CopyPPv2HatsButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		CopyPPv2HatsButton.Position = UDim2.new(0.097130239, 0, 0.101163961, 0)
		CopyPPv2HatsButton.Size = UDim2.new(0, 364, 0, 41)
		CopyPPv2HatsButton.Font = Enum.Font.GothamBlack
		CopyPPv2HatsButton.Text = "Copy FE Penis v2 hat Ids"
		CopyPPv2HatsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		CopyPPv2HatsButton.TextSize = 14.000
		CopyPPv2HatsButton.MouseButton1Down:Connect(function()
			setclipboard("3992084515, 4246228452, 451220849, 63690008")
		end)

		UICorner_20.CornerRadius = UDim.new(0, 1)
		UICorner_20.Parent = CopyPPv2HatsButton

		CopyPPv3HatsButton.Name = "CopyPPv3HatsButton"
		CopyPPv3HatsButton.Parent = NeededHatsFrame
		CopyPPv3HatsButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		CopyPPv3HatsButton.Position = UDim2.new(0.097130239, 0, 0.184947744, 0)
		CopyPPv3HatsButton.Size = UDim2.new(0, 364, 0, 41)
		CopyPPv3HatsButton.Font = Enum.Font.GothamBlack
		CopyPPv3HatsButton.Text = "Copy FE Penis v3 hat Ids"
		CopyPPv3HatsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		CopyPPv3HatsButton.TextSize = 14.000
		CopyPPv3HatsButton.MouseButton1Down:Connect(function()
			setclipboard("4246228452, 3992084515, 617605556, 451220849, 63690008")
		end)

		UICorner_21.CornerRadius = UDim.new(0, 1)
		UICorner_21.Parent = CopyPPv3HatsButton

		CopyFeBoobsAndAssHatsButton.Name = "CopyFeBoobsAndAssHatsButton"
		CopyFeBoobsAndAssHatsButton.Parent = NeededHatsFrame
		CopyFeBoobsAndAssHatsButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		CopyFeBoobsAndAssHatsButton.Position = UDim2.new(0.097130239, 0, 0.271434247, 0)
		CopyFeBoobsAndAssHatsButton.Size = UDim2.new(0, 364, 0, 41)
		CopyFeBoobsAndAssHatsButton.Font = Enum.Font.GothamBlack
		CopyFeBoobsAndAssHatsButton.Text = "Copy FE Boobs and Ass hat Ids"
		CopyFeBoobsAndAssHatsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		CopyFeBoobsAndAssHatsButton.TextSize = 14.000
		CopyFeBoobsAndAssHatsButton.MouseButton1Down:Connect(function()
			setclipboard("4154538250, 4622081834, 4819740796, 4381832739")
		end)

		UICorner_22.CornerRadius = UDim.new(0, 1)
		UICorner_22.Parent = CopyFeBoobsAndAssHatsButton

		CreditsFrame.Name = "CreditsFrame"
		CreditsFrame.Parent = UIFrame
		CreditsFrame.Active = true
		CreditsFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		CreditsFrame.Position = UDim2.new(0.278219402, 0, 0.14054054, 0)
		CreditsFrame.Size = UDim2.new(0, 453, 0, 318)
		CreditsFrame.Visible = false

		UICorner_23.CornerRadius = UDim.new(0, 1)
		UICorner_23.Parent = CreditsFrame

		TextLabel_2.Parent = CreditsFrame
		TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_2.BackgroundTransparency = 1.000
		TextLabel_2.Position = UDim2.new(0.188237607, 0, -0.000101987273, 0)
		TextLabel_2.Size = UDim2.new(0, 281, 0, 50)
		TextLabel_2.Font = Enum.Font.GothamBlack
		TextLabel_2.Text = "Script made by: ayoyao#3744"
		TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_2.TextSize = 14.000

		TextLabel_3.Parent = CreditsFrame
		TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_3.BackgroundTransparency = 1.000
		TextLabel_3.Position = UDim2.new(0.188237607, 0, 0.0674655735, 0)
		TextLabel_3.Size = UDim2.new(0, 281, 0, 50)
		TextLabel_3.Font = Enum.Font.GothamBlack
		TextLabel_3.Text = "UI made by: Cyrusous#3853 and ayoyao#3744"
		TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_3.TextSize = 14.000

		UpdatesFrame.Name = "UpdatesFrame"
		UpdatesFrame.Parent = UIFrame
		UpdatesFrame.Active = true
		UpdatesFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		UpdatesFrame.Position = UDim2.new(0.278219402, 0, 0.14054054, 0)
		UpdatesFrame.Size = UDim2.new(0, 453, 0, 318)
		UpdatesFrame.Visible = false

		UICorner_24.CornerRadius = UDim.new(0, 1)
		UICorner_24.Parent = UpdatesFrame

		TextLabel_4.Parent = UpdatesFrame
		TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_4.BackgroundTransparency = 1.000
		TextLabel_4.Position = UDim2.new(0.280353189, 0, 0, 0)
		TextLabel_4.Size = UDim2.new(0, 199, 0, 50)
		TextLabel_4.Font = Enum.Font.GothamBlack
		TextLabel_4.Text = "-new ui"
		TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_4.TextSize = 14.000

		TextLabel_5.Parent = UpdatesFrame
		TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_5.BackgroundTransparency = 1.000
		TextLabel_5.Position = UDim2.new(0.280353189, 0, 0.0675675645, 0)
		TextLabel_5.Size = UDim2.new(0, 199, 0, 50)
		TextLabel_5.Font = Enum.Font.GothamBlack
		TextLabel_5.Text = "Animations for FE Penis v3"
		TextLabel_5.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_5.TextSize = 14.000

		UICorner_25.Parent = MainRBGFrame

		UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(85, 170, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(85, 170, 255))}
		UIGradient.Parent = MainRBGFrame

		-- Scripts:

		local function JEWCPA_fake_script() -- ReanimationsButton.LocalScript 
			local script = Instance.new('LocalScript', ReanimationsButton)

			script.Parent.MouseButton1Down:Connect(function()
				script.Parent.Parent.Parent.ReanimationsFrame.Visible = true
				script.Parent.Parent.Parent.NeededHatsFrame.Visible = false
				script.Parent.Parent.Parent.FEscriptsFrame.Visible = false
				script.Parent.Parent.Parent.CreditsFrame.Visible = false
				script.Parent.Parent.Parent.UpdatesFrame.Visible = false
			end)
		end
		coroutine.wrap(JEWCPA_fake_script)()
		local function SWOB_fake_script() -- FEscriptsButton.LocalScript 
			local script = Instance.new('LocalScript', FEscriptsButton)

			script.Parent.MouseButton1Down:Connect(function()
				script.Parent.Parent.Parent.ReanimationsFrame.Visible = false
				script.Parent.Parent.Parent.NeededHatsFrame.Visible = false
				script.Parent.Parent.Parent.FEscriptsFrame.Visible = true
				script.Parent.Parent.Parent.CreditsFrame.Visible = false
				script.Parent.Parent.Parent.UpdatesFrame.Visible = false
			end)
		end
		coroutine.wrap(SWOB_fake_script)()
		local function PABV_fake_script() -- NeededHatsButton.LocalScript 
			local script = Instance.new('LocalScript', NeededHatsButton)

			script.Parent.MouseButton1Down:Connect(function()
				script.Parent.Parent.Parent.ReanimationsFrame.Visible = false
				script.Parent.Parent.Parent.NeededHatsFrame.Visible = true
				script.Parent.Parent.Parent.FEscriptsFrame.Visible = false
				script.Parent.Parent.Parent.CreditsFrame.Visible = false
				script.Parent.Parent.Parent.UpdatesFrame.Visible = false
			end)
		end
		coroutine.wrap(PABV_fake_script)()
		local function DZYQSN_fake_script() -- CreditsButton.LocalScript 
			local script = Instance.new('LocalScript', CreditsButton)

			script.Parent.MouseButton1Down:Connect(function()
				script.Parent.Parent.Parent.ReanimationsFrame.Visible = false
				script.Parent.Parent.Parent.NeededHatsFrame.Visible = false
				script.Parent.Parent.Parent.FEscriptsFrame.Visible = false
				script.Parent.Parent.Parent.CreditsFrame.Visible = true
				script.Parent.Parent.Parent.UpdatesFrame.Visible = false
			end)
		end
		coroutine.wrap(DZYQSN_fake_script)()
		local function PZPMVV_fake_script() -- UpdatesButton.LocalScript 
			local script = Instance.new('LocalScript', UpdatesButton)

			script.Parent.MouseButton1Down:Connect(function()
				script.Parent.Parent.Parent.ReanimationsFrame.Visible = false
				script.Parent.Parent.Parent.NeededHatsFrame.Visible = false
				script.Parent.Parent.Parent.FEscriptsFrame.Visible = false
				script.Parent.Parent.Parent.CreditsFrame.Visible = false
				script.Parent.Parent.Parent.UpdatesFrame.Visible = true
			end)
		end
		coroutine.wrap(PZPMVV_fake_script)()
		local function STUA_fake_script() -- MainRBGFrame.LocalScript 
			local script = Instance.new('LocalScript', MainRBGFrame)

			local button = script.Parent
			local gradient = button.UIGradient
			local ts = game:GetService("TweenService")
			local ti = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
			local offset = {Offset = Vector2.new(1, 0)}
			local create = ts:Create(gradient, ti, offset)
			local startingPos = Vector2.new(-1, 0)
			local list = {} 
			local s, kpt = ColorSequence.new, ColorSequenceKeypoint.new
			local counter = 0
			local status = "down" 
			gradient.Offset = startingPos
			local function rainbowColors()
				local sat, val = 255, 255 
				for i = 1, 15 do 
					local hue = i * 17 
					table.insert(list, Color3.fromHSV(hue / 255, sat / 255, val / 255))
				end
			end
			rainbowColors()
			gradient.Color = s({
				kpt(0, list[#list]),
				kpt(0.5, list[#list - 1]),
				kpt(1, list[#list - 2])
			})
			counter = #list
			local function animate()
				create:Play()
				create.Completed:Wait() 
				gradient.Offset = startingPos 
				gradient.Rotation = 180
				if counter == #list - 1 and status == "down" then
					gradient.Color = s({
						kpt(0, gradient.Color.Keypoints[1].Value),
						kpt(0.5, list[#list]), 
						kpt(1, list[1]) 
					})
					counter = 1
					status = "up" 
				elseif counter == #list and status == "down" then 
					gradient.Color = s({
						kpt(0, gradient.Color.Keypoints[1].Value),
						kpt(0.5, list[1]),
						kpt(1, list[2])
					})
					counter = 2
					status = "up"
				elseif counter <= #list - 2 and status == "down" then 
					gradient.Color = s({
						kpt(0, gradient.Color.Keypoints[1].Value),
						kpt(0.5, list[counter + 1]), 
						kpt(1, list[counter + 2])
					})
					counter = counter + 2
					status = "up"
				end
				create:Play()
				create.Completed:Wait()
				gradient.Offset = startingPos
				gradient.Rotation = 0 
				if counter == #list - 1 and status == "up" then
					gradient.Color = s({ 

						kpt(0, list[1]), 
						kpt(0.5, list[#list]), 
						kpt(1, gradient.Color.Keypoints[3].Value)
					})
					counter = 1
					status = "down"
				elseif counter == #list and status == "up" then
					gradient.Color = s({
						kpt(0, list[2]),
						kpt(0.5, list[1]), 
						kpt(1, gradient.Color.Keypoints[3].Value)
					})
					counter = 2
					status = "down"
				elseif counter <= #list - 2 and status == "up" then
					gradient.Color = s({
						kpt(0, list[counter + 2]), 
						kpt(0.5, list[counter + 1]), 
						kpt(1, gradient.Color.Keypoints[3].Value) 	
					})
					counter = counter + 2
					status = "down"
				end
				animate()
			end
			animate()
		end
		coroutine.wrap(STUA_fake_script)()
	else
		WrongKey.Visible = true
	end
end)

UICorner_3.Parent = TextButton

TextLabel_2.Parent = KeyFrame
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.Position = UDim2.new(0.098550722, 0, 0, 0)
TextLabel_2.Size = UDim2.new(0, 278, 0, 27)
TextLabel_2.Font = Enum.Font.GothamBlack
TextLabel_2.Text = "Electroware"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14.000
TextLabel_2.TextWrapped = true

ImageLabel.Parent = KeyFrame
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.Position = UDim2.new(0.310144931, 0, 0.111662529, 0)
ImageLabel.Size = UDim2.new(0, 130, 0, 128)
ImageLabel.Image = "http://www.roblox.com/asset/?id=9296791795"

Frame.Parent = MainGui
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.Position = UDim2.new(0.89670527, 0, -0.0234192032, 0)
Frame.Size = UDim2.new(0, 48, 0, 45)

UICorner_4.Parent = Frame

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(85, 170, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(85, 170, 255))}
UIGradient_2.Parent = Frame

TextButton_2.Parent = Frame
TextButton_2.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TextButton_2.Position = UDim2.new(0.13241826, 0, 0.133491069, 0)
TextButton_2.Size = UDim2.new(0, 35, 0, 33)
TextButton_2.Font = Enum.Font.GothamBlack
TextButton_2.Text = "x"
TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_2.TextSize = 14.000
TextButton_2.MouseButton1Down:Connect(function()
	OfficialElectrowareKey:Destroy()
end)

UICorner_5.Parent = TextButton_2

WrongKey.Name = "WrongKey"
WrongKey.Parent = OfficialElectrowareKey
WrongKey.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
WrongKey.Position = UDim2.new(0.412536442, 0, 0.259833127, 0)
WrongKey.Size = UDim2.new(0, 345, 0, 403)
WrongKey.Visible = false

TextLabel_3.Parent = WrongKey
TextLabel_3.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TextLabel_3.Position = UDim2.new(0.162389949, 0, 0.444233358, 0)
TextLabel_3.Size = UDim2.new(0, 232, 0, 78)
TextLabel_3.Font = Enum.Font.GothamBlack
TextLabel_3.Text = "Wrong Key!"
TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.TextScaled = true
TextLabel_3.TextSize = 14.000
TextLabel_3.TextWrapped = true

UICorner_6.Parent = TextLabel_3

UICorner_7.Parent = WrongKey

ImageLabel_2.Parent = WrongKey
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.Position = UDim2.new(0.313043505, 0, 0.0942928046, 0)
ImageLabel_2.Size = UDim2.new(0, 127, 0, 125)
ImageLabel_2.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

TextButton_3.Parent = WrongKey
TextButton_3.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TextButton_3.Position = UDim2.new(0.192416251, 0, 0.717121243, 0)
TextButton_3.Size = UDim2.new(0, 213, 0, 75)
TextButton_3.Font = Enum.Font.GothamBlack
TextButton_3.Text = "Try again"
TextButton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_3.TextScaled = true
TextButton_3.TextSize = 14.000
TextButton_3.TextWrapped = true

UICorner_8.Parent = TextButton_3

-- Scripts:

local function AXMV_fake_script() -- MainGui.LocalScript 
	local script = Instance.new('LocalScript', MainGui)

	local button = script.Parent
	local gradient = button.UIGradient
	local ts = game:GetService("TweenService")
	local ti = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	local offset = {Offset = Vector2.new(1, 0)}
	local create = ts:Create(gradient, ti, offset)
	local startingPos = Vector2.new(-1, 0)
	local list = {} 
	local s, kpt = ColorSequence.new, ColorSequenceKeypoint.new
	local counter = 0
	local status = "down" 
	gradient.Offset = startingPos
	local function rainbowColors()
		local sat, val = 255, 255 
		for i = 1, 15 do 
			local hue = i * 17 
			table.insert(list, Color3.fromHSV(hue / 255, sat / 255, val / 255))
		end
	end
	rainbowColors()
	gradient.Color = s({
		kpt(0, list[#list]),
		kpt(0.5, list[#list - 1]),
		kpt(1, list[#list - 2])
	})
	counter = #list
	local function animate()
		create:Play()
		create.Completed:Wait() 
		gradient.Offset = startingPos 
		gradient.Rotation = 180
		if counter == #list - 1 and status == "down" then
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[#list]), 
				kpt(1, list[1]) 
			})
			counter = 1
			status = "up" 
		elseif counter == #list and status == "down" then 
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[1]),
				kpt(1, list[2])
			})
			counter = 2
			status = "up"
		elseif counter <= #list - 2 and status == "down" then 
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[counter + 1]), 
				kpt(1, list[counter + 2])
			})
			counter = counter + 2
			status = "up"
		end
		create:Play()
		create.Completed:Wait()
		gradient.Offset = startingPos
		gradient.Rotation = 0 
		if counter == #list - 1 and status == "up" then
			gradient.Color = s({ 
	
				kpt(0, list[1]), 
				kpt(0.5, list[#list]), 
				kpt(1, gradient.Color.Keypoints[3].Value)
			})
			counter = 1
			status = "down"
		elseif counter == #list and status == "up" then
			gradient.Color = s({
				kpt(0, list[2]),
				kpt(0.5, list[1]), 
				kpt(1, gradient.Color.Keypoints[3].Value)
			})
			counter = 2
			status = "down"
		elseif counter <= #list - 2 and status == "up" then
			gradient.Color = s({
				kpt(0, list[counter + 2]), 
				kpt(0.5, list[counter + 1]), 
				kpt(1, gradient.Color.Keypoints[3].Value) 	
			})
			counter = counter + 2
			status = "down"
		end
		animate()
	end
	animate()
end
coroutine.wrap(AXMV_fake_script)()
local function DBNPG_fake_script() -- TextBox.LocalScript 
	local script = Instance.new('LocalScript', TextBox)

	script.Parent.Parent.TextButton.MouseButton1Down:Connect(function()
		if script.Parent.Text == "cnajcj556dakf" then
			script.Parent.Parent.Parent.Parent:Destroy()
		else
			print("Just get the fucking Key from the Discord server.")
			script.Parent.Parent.Parent.Parent.WrongKey.Visible = true
		end
	end)
end
coroutine.wrap(DBNPG_fake_script)()
local function ADZBWBN_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local button = script.Parent
	local gradient = button.UIGradient
	local ts = game:GetService("TweenService")
	local ti = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	local offset = {Offset = Vector2.new(1, 0)}
	local create = ts:Create(gradient, ti, offset)
	local startingPos = Vector2.new(-1, 0)
	local list = {} 
	local s, kpt = ColorSequence.new, ColorSequenceKeypoint.new
	local counter = 0
	local status = "down" 
	gradient.Offset = startingPos
	local function rainbowColors()
		local sat, val = 255, 255 
		for i = 1, 15 do 
			local hue = i * 17 
			table.insert(list, Color3.fromHSV(hue / 255, sat / 255, val / 255))
		end
	end
	rainbowColors()
	gradient.Color = s({
		kpt(0, list[#list]),
		kpt(0.5, list[#list - 1]),
		kpt(1, list[#list - 2])
	})
	counter = #list
	local function animate()
		create:Play()
		create.Completed:Wait() 
		gradient.Offset = startingPos 
		gradient.Rotation = 180
		if counter == #list - 1 and status == "down" then
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[#list]), 
				kpt(1, list[1]) 
			})
			counter = 1
			status = "up" 
		elseif counter == #list and status == "down" then 
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[1]),
				kpt(1, list[2])
			})
			counter = 2
			status = "up"
		elseif counter <= #list - 2 and status == "down" then 
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[counter + 1]), 
				kpt(1, list[counter + 2])
			})
			counter = counter + 2
			status = "up"
		end
		create:Play()
		create.Completed:Wait()
		gradient.Offset = startingPos
		gradient.Rotation = 0 
		if counter == #list - 1 and status == "up" then
			gradient.Color = s({ 
	
				kpt(0, list[1]), 
				kpt(0.5, list[#list]), 
				kpt(1, gradient.Color.Keypoints[3].Value)
			})
			counter = 1
			status = "down"
		elseif counter == #list and status == "up" then
			gradient.Color = s({
				kpt(0, list[2]),
				kpt(0.5, list[1]), 
				kpt(1, gradient.Color.Keypoints[3].Value)
			})
			counter = 2
			status = "down"
		elseif counter <= #list - 2 and status == "up" then
			gradient.Color = s({
				kpt(0, list[counter + 2]), 
				kpt(0.5, list[counter + 1]), 
				kpt(1, gradient.Color.Keypoints[3].Value) 	
			})
			counter = counter + 2
			status = "down"
		end
		animate()
	end
	animate()
end
coroutine.wrap(ADZBWBN_fake_script)()
local function DJNRF_fake_script() -- TextButton_3.LocalScript 
	local script = Instance.new('LocalScript', TextButton_3)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Visible = false
	end)
end
coroutine.wrap(DJNRF_fake_script)()
