local OfficialBitZKeySystem = Instance.new("ScreenGui")
local MainGui = Instance.new("Frame")
local UIGradient = Instance.new("UIGradient")
local UICorner = Instance.new("UICorner")
local KeyFrame = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local TextBox = Instance.new("TextBox")
local TextLabel = Instance.new("TextLabel")
local ImageLabel = Instance.new("ImageLabel")
local TextButton = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local Frame = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local TextButton_2 = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local WrongKey = Instance.new("Frame")
local TextLabel_2 = Instance.new("TextLabel")
local UICorner_6 = Instance.new("UICorner")
local UICorner_7 = Instance.new("UICorner")
local ImageLabel_2 = Instance.new("ImageLabel")
local TextButton_3 = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")

OfficialBitZKeySystem.Name = "OfficialBitZKeySystem"
OfficialBitZKeySystem.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
OfficialBitZKeySystem.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
OfficialBitZKeySystem.ResetOnSpawn = false

MainGui.Name = "MainGui"
MainGui.Parent = OfficialBitZKeySystem
MainGui.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainGui.Position = UDim2.new(0.402973175, 0, 0.245530397, 0)
MainGui.Size = UDim2.new(0, 371, 0, 427)

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(85, 170, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient.Parent = MainGui

UICorner.Parent = MainGui

KeyFrame.Name = "KeyFrame"
KeyFrame.Parent = MainGui
KeyFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
KeyFrame.Position = UDim2.new(0.0350404307, 0, 0.0281030443, 0)
KeyFrame.Size = UDim2.new(0, 345, 0, 403)

UICorner_2.Parent = KeyFrame

TextBox.Parent = KeyFrame
TextBox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TextBox.Position = UDim2.new(0.171014488, 0, 0.600496292, 0)
TextBox.Size = UDim2.new(0, 227, 0, 63)
TextBox.Font = Enum.Font.GothamBlack
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextSize = 14.000

TextLabel.Parent = KeyFrame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(0.0985507295, 0, 0.287841201, 0)
TextLabel.Size = UDim2.new(0, 278, 0, 92)
TextLabel.Font = Enum.Font.GothamBlack
TextLabel.Text = "Please enter a Key!"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

ImageLabel.Parent = KeyFrame
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.Position = UDim2.new(0.353623182, 0, 0.024813896, 0)
ImageLabel.Size = UDim2.new(0, 100, 0, 100)
ImageLabel.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

TextButton.Parent = KeyFrame
TextButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TextButton.Position = UDim2.new(0.281159431, 0, 0.816377163, 0)
TextButton.Size = UDim2.new(0, 149, 0, 50)
TextButton.Font = Enum.Font.GothamBlack
TextButton.Text = "Enter"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true
TextButton.MouseButton1Down:Connect(function()
	if TextBox.Text == "fw85f4c_54e" TextBox.Text == "id1_LIMITEDKEY_1" then
		OfficialBitZKeySystem:Destroy()
		local ElectrowareSG = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local FrameButtonsFrame = Instance.new("Frame")
local ReanimationsButton = Instance.new("TextButton")
local FreeFEscriptsButton = Instance.new("TextButton")
local InfoButton = Instance.new("TextButton")
local NeededHtasButton = Instance.new("TextButton")
local FreeFEscriptsFrame = Instance.new("Frame")
local FEpenisButton = Instance.new("TextButton")
local FEpenisv2Button = Instance.new("TextButton")
local FEassBoobsButton = Instance.new("TextButton")
local FEassBoobsButton_2 = Instance.new("TextButton")
local ReanimationsFrame = Instance.new("Frame")
local Reanimationv1Button = Instance.new("TextButton")
local Reanimationv1rhmButton = Instance.new("TextButton")
local Reanimationv1Button_2 = Instance.new("TextButton")
local InfoFrame = Instance.new("Frame")
local Credits = Instance.new("TextLabel")
local xButton = Instance.new("TextButton")
local NeededHatsFrame = Instance.new("Frame")
local TextLabel_2 = Instance.new("TextLabel")
local FEpenisHatsButton = Instance.new("TextButton")
local FEpenisHatsButton_2 = Instance.new("TextButton")
local FEpenisHatsButton_3 = Instance.new("TextButton")
local FEpenisHatsButton_4 = Instance.new("TextButton")
local CoreGui = game:GetService("CoreGui")

ElectrowareSG.Name = "ElectrowareSG"
ElectrowareSG.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ElectrowareSG.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ElectrowareSG.Parent = game.CoreGui
ElectrowareSG.ResetOnSpawn = false

MainFrame.Name = "MainFrame"
MainFrame.Parent = ElectrowareSG
MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainFrame.Position = UDim2.new(0.379413962, 0, 0.483909428, 0)
MainFrame.Size = UDim2.new(0, 496, 0, 272)
MainFrame.Active = true
MainFrame.Draggable = true

TextLabel.Parent = MainFrame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.Size = UDim2.new(0, 496, 0, 33)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Electroware v0.9.1 (testing)"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextSize = 14.000

FrameButtonsFrame.Name = "FrameButtonsFrame"
FrameButtonsFrame.Parent = MainFrame
FrameButtonsFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FrameButtonsFrame.Position = UDim2.new(0, 0, 0.121323526, 0)
FrameButtonsFrame.Size = UDim2.new(0, 110, 0, 239)

ReanimationsButton.Name = "ReanimationsButton"
ReanimationsButton.Parent = FrameButtonsFrame
ReanimationsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ReanimationsButton.Size = UDim2.new(0, 110, 0, 42)
ReanimationsButton.Font = Enum.Font.SourceSans
ReanimationsButton.Text = "Reanimations"
ReanimationsButton.TextColor3 = Color3.fromRGB(0, 0, 0)
ReanimationsButton.TextSize = 14.000

FreeFEscriptsButton.Name = "FreeFEscriptsButton"
FreeFEscriptsButton.Parent = FrameButtonsFrame
FreeFEscriptsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FreeFEscriptsButton.Position = UDim2.new(0, 0, 0.17573221, 0)
FreeFEscriptsButton.Size = UDim2.new(0, 110, 0, 42)
FreeFEscriptsButton.Font = Enum.Font.SourceSans
FreeFEscriptsButton.Text = "Free FE scripts"
FreeFEscriptsButton.TextColor3 = Color3.fromRGB(0, 0, 0)
FreeFEscriptsButton.TextSize = 14.000

InfoButton.Name = "InfoButton"
InfoButton.Parent = FrameButtonsFrame
InfoButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
InfoButton.Position = UDim2.new(0, 0, 0.527196586, 0)
InfoButton.Size = UDim2.new(0, 110, 0, 42)
InfoButton.Font = Enum.Font.SourceSans
InfoButton.Text = "Info"
InfoButton.TextColor3 = Color3.fromRGB(0, 0, 0)
InfoButton.TextSize = 14.000

NeededHtasButton.Name = "NeededHtasButton"
NeededHtasButton.Parent = FrameButtonsFrame
NeededHtasButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NeededHtasButton.Position = UDim2.new(0, 0, 0.35146445, 0)
NeededHtasButton.Size = UDim2.new(0, 110, 0, 42)
NeededHtasButton.Font = Enum.Font.SourceSans
NeededHtasButton.Text = "Needed Hats"
NeededHtasButton.TextColor3 = Color3.fromRGB(0, 0, 0)
NeededHtasButton.TextSize = 14.000

FreeFEscriptsFrame.Name = "FreeFEscriptsFrame"
FreeFEscriptsFrame.Parent = MainFrame
FreeFEscriptsFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FreeFEscriptsFrame.Position = UDim2.new(0.221774191, 0, 0.121323526, 0)
FreeFEscriptsFrame.Size = UDim2.new(0, 386, 0, 239)
FreeFEscriptsFrame.Visible = false

FEpenisButton.Name = "FEpenisButton"
FEpenisButton.Parent = FreeFEscriptsFrame
FEpenisButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FEpenisButton.Position = UDim2.new(0.240932643, 0, 0.0460251048, 0)
FEpenisButton.Size = UDim2.new(0, 200, 0, 39)
FEpenisButton.Font = Enum.Font.SourceSans
FEpenisButton.Text = "FE Penis"
FEpenisButton.TextColor3 = Color3.fromRGB(0, 0, 0)
FEpenisButton.TextSize = 14.000
FEpenisButton.MouseButton1Down:Connect(function()
	game.Players.LocalPlayer.Character.RedBeanieWithHair.Handle.att1_Handle.Orientation = Vector3.new(-90, -0, 0)
	game.Players.LocalPlayer.Character.RedBeanieWithHair.Handle.att1_Handle.Position = Vector3.new(0, -2, -1.9)
	game.Players.LocalPlayer.Character.MeshPartAccessory.Handle.att1_Handle.Position = Vector3.new(1, -3.7, -1)
	game.Players.LocalPlayer.Character.InternationalFedora.Handle.att1_Handle.Position = Vector3.new(-1, -3.7, -1)
end)

FEpenisv2Button.Name = "FEpenisv2Button"
FEpenisv2Button.Parent = FreeFEscriptsFrame
FEpenisv2Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FEpenisv2Button.Position = UDim2.new(0.240932643, 0, 0.288702935, 0)
FEpenisv2Button.Size = UDim2.new(0, 200, 0, 39)
FEpenisv2Button.Font = Enum.Font.SourceSans
FEpenisv2Button.Text = "FE Penis v2"
FEpenisv2Button.TextColor3 = Color3.fromRGB(0, 0, 0)
FEpenisv2Button.TextSize = 14.000
FEpenisv2Button.MouseButton1Down:Connect(function()
	game.Players.LocalPlayer.Character["Pal Hair"].Handle.att1_Handle.Position = Vector3.new(0, -2.7, -1.1)
	game.Players.LocalPlayer.Character.LavanderHair.Handle.att1_Handle.Position = Vector3.new(0, -2.7, -3)
	game.Players.LocalPlayer.Character.LavanderHair.Handle.att1_Handle.Orientation = Vector3.new(10, 0, 0)
	game.Players.LocalPlayer.Character.MeshPartAccessory.Handle.att1_Handle.Position = Vector3.new(0.95, -3.7, -1)
	game.Players.LocalPlayer.Character.InternationalFedora.Handle.att1_Handle.Position = Vector3.new(-0.8, -3.7, -1)
end)

FEassBoobsButton.Name = "FEassBoobsButton"
FEassBoobsButton.Parent = FreeFEscriptsFrame
FEassBoobsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FEassBoobsButton.Position = UDim2.new(0.240932643, 0, 0.778242707, 0)
FEassBoobsButton.Size = UDim2.new(0, 200, 0, 39)
FEassBoobsButton.Font = Enum.Font.SourceSans
FEassBoobsButton.Text = "FE Ass and Boobs"
FEassBoobsButton.TextColor3 = Color3.fromRGB(0, 0, 0)
FEassBoobsButton.TextSize = 14.000
FEassBoobsButton.MouseButton1Down:Connect(function()
	game.Players.LocalPlayer.Character.MeshPartAccessory.Handle.att1_Handle.Position = Vector3.new(0.5, -1.8, -0.7)
	game.Players.LocalPlayer.Character.MeshPartAccessory.Handle.att1_Handle.Orientation = Vector3.new(-15, -15, 0)
	game.Players.LocalPlayer.Character["International Fedora"].Handle.att1_Handle.Position = Vector3.new(-0.5, -2, -0.7)
	game.Players.LocalPlayer.Character["International Fedora"].Handle.att1_Handle.Orientation = Vector3.new(-15, 15, 0)
	game.Players.LocalPlayer.Character.InternationalFedora.Handle.att1_Handle.Position = Vector3.new(0.5, -3.3, 0.9)
	game.Players.LocalPlayer.Character.InternationalFedora.Handle.att1_Handle.Orientation = Vector3.new(15, 15, 0)
	game.Players.LocalPlayer.Character.BagAccessory.Handle.att1_Handle.Position = Vector3.new(-0.5, -1.3, 0)
	game.Players.LocalPlayer.Character.BagAccessory.Handle.att1_Handle.Orientation = Vector3.new(15, -15, 0)
end)

FEassBoobsButton_2.Name = "FEassBoobsButton"
FEassBoobsButton_2.Parent = FreeFEscriptsFrame
FEassBoobsButton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FEassBoobsButton_2.Position = UDim2.new(0.240932643, 0, 0.539748967, 0)
FEassBoobsButton_2.Size = UDim2.new(0, 200, 0, 39)
FEassBoobsButton_2.Font = Enum.Font.SourceSans
FEassBoobsButton_2.Text = "FE Penis v3(USE THE REANIMATION)"
FEassBoobsButton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
FEassBoobsButton_2.TextSize = 14.000
FEassBoobsButton_2.MouseButton1Down:Connect(function()
	game.Players.LocalPlayer.Character["Pal Hair"].Handle.att1_Handle.Position = Vector3.new(0, -2.7, -1.1)
	game.Players.LocalPlayer.Character.LavanderHair.Handle.att1_Handle.Position = Vector3.new(0, -2.7, -3)
	game.Players.LocalPlayer.Character.LavanderHair.Handle.att1_Handle.Orientation = Vector3.new(10, 0, 0)
	game.Players.LocalPlayer.Character.MeshPartAccessory.Handle.att1_Handle.Position = Vector3.new(0.95, -3.7, -1)
	game.Players.LocalPlayer.Character.InternationalFedora.Handle.att1_Handle.Position = Vector3.new(-0.8, -3.7, -1)

    local a = game.Players.LocalPlayer.Character["Head"]:FindFirstChild("att1_Head")
    a.Position = Vector3.new(0, -2.1, -4)
    a.Orientation = Vector3.new(80, -160, -80)
    game.Players.LocalPlayer.Character.Head.face:Destroy()
    game.Players.LocalPlayer.Character.Model.Head.face:Destroy()
end)

ReanimationsFrame.Name = "ReanimationsFrame"
ReanimationsFrame.Parent = MainFrame
ReanimationsFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ReanimationsFrame.Position = UDim2.new(0.221774191, 0, 0.121323526, 0)
ReanimationsFrame.Size = UDim2.new(0, 386, 0, 239)
ReanimationsFrame.Visible = false

Reanimationv1Button.Name = "Reanimationv1Button"
Reanimationv1Button.Parent = ReanimationsFrame
Reanimationv1Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Reanimationv1Button.Position = UDim2.new(0.240932643, 0, 0.0711297095, 0)
Reanimationv1Button.Size = UDim2.new(0, 200, 0, 36)
Reanimationv1Button.Font = Enum.Font.SourceSans
Reanimationv1Button.Text = "Reanimation v1"
Reanimationv1Button.TextColor3 = Color3.fromRGB(0, 0, 0)
Reanimationv1Button.TextSize = 14.000
Reanimationv1Button.MouseButton1Down:Connect(function()
	for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
		if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then
			game:GetService("RunService").Heartbeat:connect(function()
				v.Velocity = Vector3.new(0,35,0)
				wait(0.5)
			end)
		end
	end

	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Electroware Notification";
		Text = "Elecroware Netless executed please wait untill your health is 0";
		Icon = "http://www.roblox.com/asset/?id=8724185099"})

	local netboost = 100 --velocity 
	--netboost usage: 
	--set to false to disable
	--vector3 if you dont want the velocity to change
	--number to change the velocity in real time with magnitude equal to the number
	local simradius = "shp" --simulation radius method
	--"shp" - sethiddenproperty
	--"ssr" - setsimulationradius
	--false - disable
	local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
	local newanimate = true --disables the animate script and enable after reanimation
	local discharscripts = true --disables all localScripts parented to your character before reanimation
	local R15toR6 = true --tries to convert your character to r6 if its r15
	local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
	local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
	local method = 3 --reanimation method
	--methods:
	--0 - breakJoints (takes [loadtime] seconds to laod)
	--1 - limbs
	--2 - limbs + anti respawn
	--3 - limbs + breakJoints after [loadtime] seconds
	--4 - remove humanoid + breakJoints
	--5 - remove humanoid + limbs
	local alignmode = 2 --AlignPosition mode
	--modes:
	--1 - AlignPosition rigidity enabled true
	--2 - 2 AlignPositions rigidity enabled both true and false
	--3 - AlignPosition rigidity enabled false
	local hedafterneck = true --disable aligns for head and enable after neck is removed

	local lp = game:GetService("Players").LocalPlayer
	local rs = game:GetService("RunService")
	local stepped = rs.Stepped
	local heartbeat = rs.Heartbeat
	local renderstepped = rs.RenderStepped
	local sg = game:GetService("StarterGui")
	local ws = game:GetService("Workspace")

	local c = lp.Character

	local function gp(parent, name, className)
		local ret = nil
		if parent then
			for i, v in pairs(parent:GetChildren()) do
				if (v.Name == name) and v:IsA(className) then
					ret = v
				end
			end
		end
		return ret
	end

	local function align(Part0, Part1)
		Part0.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001, 0.0001, 0.0001)

		local att1 = Instance.new("Attachment")
		att1.Orientation = Vector3.new(0, 0, 0)
		att1.Position = Vector3.new(0, 0, 0)
		att1.Archivable = true
		local att0 = att1:Clone()

		if (alignmode == 1) or (alignmode == 2) then
			local ape = Instance.new("AlignPosition", att0)
			ape.ApplyAtCenterOfMass = false
			ape.MaxForce = math.huge
			ape.MaxVelocity = math.huge
			ape.ReactionForceEnabled = false
			ape.Responsiveness = 200
			ape.Attachment1 = att1
			ape.Attachment0 = att0
			ape.Name = "AlignPositionRtrue"
			ape.RigidityEnabled = true
		end

		if (alignmode == 2) or (alignmode == 3) then
			local apd = Instance.new("AlignPosition", att0)
			apd.ApplyAtCenterOfMass = false
			apd.MaxForce = math.huge
			apd.MaxVelocity = math.huge
			apd.ReactionForceEnabled = false
			apd.Responsiveness = 200
			apd.Attachment1 = att1
			apd.Attachment0 = att0
			apd.Name = "AlignPositionRfalse"
			apd.RigidityEnabled = false
		end

		local ao = Instance.new("AlignOrientation", att0)
		ao.MaxAngularVelocity = math.huge
		ao.MaxTorque = math.huge
		ao.PrimaryAxisOnly = false
		ao.ReactionTorqueEnabled = false
		ao.Responsiveness = 200
		ao.Attachment1 = att1
		ao.Attachment0 = att0
		ao.RigidityEnabled = false

		att1.Parent = Part1
		att1.Name = "att1_" .. Part1.Name

		att0.Parent = Part0
		att0.Name = "att0_" .. Part0.Name

		if typeof(netboost) == "Vector3" then
			spawn(function()
				local vel = Vector3.new(0, 0, 0)
				while Part0 and Part0.Parent do
					Part0.Velocity = vel
					heartbeat:Wait()
					if Part0 and Part0.Parent then
						vel = Part0.Velocity
						Part0.Velocity = netboost
						stepped:Wait()
					end
				end
			end)
		end

		if typeof(netboost) == "number" then
			spawn(function()
				local vel = Vector3.new(0, 0, 0)
				while Part0 and Part0.Parent do
					Part0.Velocity = vel
					heartbeat:Wait()
					if Part0 and Part0.Parent then
						local newvel = vel
						local mag = newvel.Magnitude
						if mag < 0.1 then
							newvel = Vector3.new(0, netboost, 0)
						else
							local multiplier = netboost / mag
							newvel *= Vector3.new(multiplier,  multiplier, multiplier)
						end
						vel = Part0.Velocity
						Part0.Velocity = newvel
						stepped:Wait()
					end
				end
			end)
		end
	end

	local function respawnrequest()
		local c = lp.Character
		local ccfr = ws.CurrentCamera.CFrame
		local fc = Instance.new("Model")
		local nh = Instance.new("Humanoid", fc)
		lp.Character = fc
		nh.Health = 0
		lp.Character = c
		fc:Destroy()
		local con = nil
		local function confunc()
			con:Disconnect()
			ws.CurrentCamera.CFrame = ccfr
		end
		con = renderstepped:Connect(confunc)
	end

	local destroyhum = (method == 4) or (method == 5)
	local breakjoints = (method == 0) or (method == 4)
	local antirespawn = (method == 0) or (method == 2) or (method == 3)

	addtools = addtools and gp(lp, "Backpack", "Backpack")

	if not (c and c.Parent) then
		return
	end

	if simradius == "shp" then
		local shp = sethiddenproperty or set_hidden_property or set_hidden_prop or sethiddenprop
		if shp then
			spawn(function()
				while heartbeat:Wait() and c and c.Parent do
					shp(lp, "SimulationRadius", math.huge)
				end
			end)
		end
	end

	if simradius == "ssr" then
		local ssr = setsimulationradius or set_simulation_radius or set_sim_radius or setsimradius or set_simulation_rad or setsimulationrad
		if ssr then
			spawn(function()
				while stepped:Wait() and c and c.Parent do
					ssr(math.huge)
				end
			end)
		end
	end

	antiragdoll = antiragdoll and function(v)
		if v and v.Parent and (v:IsA("HingeConstraint") or v:IsA("BallSocketConstraint")) then
			v:Destroy()
		end
	end

	if antiragdoll then
		for i, v in pairs(c:GetDescendants()) do
			antiragdoll(v)
		end
		c.DescendantAdded:Connect(antiragdoll)
	end

	if antirespawn then
		respawnrequest()
	end

	if method == 0 then
		wait(loadtime)
		if not (c and c.Parent) then
			return
		end
	end

	if discharscripts then
		for i, v in pairs(c:GetChildren()) do
			if v and v.Parent and v:IsA("LocalScript") then
				v.Disabled = true
			end
		end
	elseif newanimate then
		local animate = gp(c, "Animate", "LocalScript")
		if animate and (not animate.Disabled) then
			animate.Disabled = true
		else
			newanimate = false
		end
	end

	local hum = c:FindFirstChildOfClass("Humanoid")
	if hum then
		for i, v in pairs(hum:GetPlayingAnimationTracks()) do
			v:Stop()
		end
	end

	if addtools then
		for i, v in pairs(addtools:GetChildren()) do
			if v and v.Parent and v:IsA("Tool") then
				v.Parent = c
			end
		end
	end

	pcall(function()
		settings().Physics.AllowSleep = false
		settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
	end)

	local OLDscripts = {}

	for i, v in pairs(c:GetDescendants()) do
		if v.ClassName == "Script" then
			table.insert(OLDscripts, v)
		end
	end

	local scriptNames = {}

	for i, v in pairs(c:GetDescendants()) do
		if v and v.Parent and v:IsA("BasePart") then
			local newName = tostring(i)
			local exists = true
			while exists do
				exists = false
				for i, v in pairs(OLDscripts) do
					if v.Name == newName then
						exists = true
					end
				end
				if exists then
					newName = newName .. "_"    
				end
			end
			table.insert(scriptNames, newName)
			Instance.new("Script", v).Name = newName
		end
	end

	c.Archivable = true
	local cl = c:Clone()
	for i, v in pairs(cl:GetDescendants()) do
		pcall(function()
			v.Transparency = 1
			v.Anchored = false
		end)
	end

	local model = Instance.new("Model", c)
	model.Name = model.ClassName

	for i, v in pairs(c:GetChildren()) do
		if v and v.Parent and (v ~= model) then
			if destroyhum and v:IsA("Humanoid") then
				v:Destroy()
			else
				if addtools and v:IsA("Tool") then
					for i1, v1 in pairs(v:GetDescendants()) do
						if v1 and v1.Parent and v1:IsA("BasePart") then
							local bv = Instance.new("BodyVelocity", v1)
							bv.Velocity = Vector3.new(0, 0, 0)
							bv.MaxForce = Vector3.new(1000, 1000, 1000)
							bv.P = 1250
							bv.Name = "bv_" .. v.Name
						end
					end
				end
				v.Parent = model
			end
		end
	end
	local head = gp(model, "Head", "BasePart")
	local torso = gp(model, "Torso", "BasePart") or gp(model, "UpperTorso", "BasePart")
	if breakjoints then
		model:BreakJoints()
	else
		if head and torso then
			for i, v in pairs(model:GetDescendants()) do
				if v and v.Parent and v:IsA("Weld") or v:IsA("Snap") or v:IsA("Glue") or v:IsA("Motor") or v:IsA("Motor6D") then
					local save = false
					if (v.Part0 == torso) and (v.Part1 == head) then
						save = true
					end
					if (v.Part0 == head) and (v.Part1 == torso) then
						save = true
					end
					if save then
						if hedafterneck then
							hedafterneck = v
						end
					else
						v:Destroy()
					end
				end
			end
		end
		if method == 3 then
			spawn(function()
				wait(loadtime)
				if model and model.Parent then
					model:BreakJoints()
				end
			end)
		end
	end

	cl.Parent = c
	for i, v in pairs(cl:GetChildren()) do
		if v and v.Parent then
			v.Parent = c
		end
	end
	cl:Destroy()

	local modelcolcon = nil
	local function modelcolf()
		if model and model.Parent then
			for i, v in pairs(model:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
		else
			modelcolcon:Disconnect()
		end
	end
	modelcolcon = stepped:Connect(modelcolf)
	modelcolf()

	for i, scr in pairs(model:GetDescendants()) do
		if scr and scr.Parent and (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
			local Part0 = scr.Parent
			if Part0:IsA("BasePart") then
				for i1, scr1 in pairs(c:GetDescendants()) do
					if scr1 and scr1.Parent and (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
						local Part1 = scr1.Parent
						if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
							align(Part0, Part1)
						end
					end
				end
			end
		end
	end

	if (typeof(hedafterneck) == "Instance") and head and head.Parent then
		local aligns = {}
		for i, v in pairs(head:GetDescendants()) do
			if v and v.Parent and (v:IsA("AlignPosition") or v:IsA("AlignOrientation")) then
				table.insert(aligns, v)
				v.Enabled = false
			end
		end
		spawn(function()
			while c and c.Parent and hedafterneck and hedafterneck.Parent do
				stepped:Wait()
			end
			if not (c and c.Parent and head and head.Parent) then
				return
			end
			for i, v in pairs(aligns) do
				pcall(function()
					v.Enabled = true
				end)
			end
		end)
	end

	for i, v in pairs(c:GetDescendants()) do
		if v and v.Parent then
			if v.ClassName == "Script" then
				if table.find(scriptNames, v.Name) then
					v:Destroy()
				end
			else
				if not v:IsDescendantOf(model) then
					if v:IsA("Decal") then
						v.Transparency = 1
					end
					if v:IsA("ForceField") then
						v.Visible = false
					end
					if v:IsA("Sound") then
						v.Playing = false
					end
					if v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") then
						v.Enabled = false
					end
				end
			end
		end
	end

	if newanimate then
		local animate = gp(c, "Animate", "LocalScript")
		if animate then
			animate.Disabled = false
		end
	end

	if addtools then
		for i, v in pairs(c:GetChildren()) do
			if v and v.Parent and v:IsA("Tool") then
				v.Parent = addtools
			end
		end
	end

	local hum0 = model:FindFirstChildOfClass("Humanoid")
	local hum1 = c:FindFirstChildOfClass("Humanoid")
	if hum1 then
		ws.CurrentCamera.CameraSubject = hum1
		spawn(function()
			renderstepped:Wait()
			if c and c.Parent and hum1 and (hum1.Parent == c) then
				ws.CurrentCamera.CameraSubject = hum1
			end
		end)
		if hum0 then
			hum0.Changed:Connect(function(prop)
				if (prop == "Jump") and hum1 and hum1.Parent then
					hum1.Jump = hum0.Jump
				end
			end)
		else
			lp.Character = nil
			lp.Character = c
		end
	end

	local rb = Instance.new("BindableEvent", c)
	rb.Event:Connect(function()
		rb:Destroy()
		sg:SetCore("ResetButtonCallback", true)
		if destroyhum then
			c:BreakJoints()
			return
		end
		if antirespawn then
			if hum0 and hum0.Parent and (hum0.Health > 0) then
				model:BreakJoints()
				hum0.Health = 0
			end
			respawnrequest()
		else
			if hum0 and hum0.Parent and (hum0.Health > 0) then
				model:BreakJoints()
				hum0.Health = 0
			end
		end
	end)
	sg:SetCore("ResetButtonCallback", rb)

	spawn(function()
		while c and c.Parent do
			if hum0 and hum0.Parent and hum1 and hum1.Parent then
				hum1.Jump = hum0.Jump
			end
			wait()
		end
		sg:SetCore("ResetButtonCallback", true)
	end)

	R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
	if R15toR6 then
		local cf = nil
		pcall(function()
			cf = gp(c, "HumanoidRootPart", "BasePart").CFrame
		end)
		if cf then
			local R6parts = { 
				head = {
					Name = "Head",
					Size = Vector3.new(2, 1, 1),
					R15 = {
						Head = 0
					}
				},
				torso = {
					Name = "Torso",
					Size = Vector3.new(2, 2, 1),
					R15 = {
						UpperTorso = 0.2,
						LowerTorso = -0.8
					}
				},
				root = {
					Name = "HumanoidRootPart",
					Size = Vector3.new(2, 2, 1),
					R15 = {
						HumanoidRootPart = 0
					}
				},
				leftArm = {
					Name = "Left Arm",
					Size = Vector3.new(1, 2, 1),
					R15 = {
						LeftHand = -0.85,
						LeftLowerArm = -0.2,
						LeftUpperArm = 0.4
					}
				},
				rightArm = {
					Name = "Right Arm",
					Size = Vector3.new(1, 2, 1),
					R15 = {
						RightHand = -0.85,
						RightLowerArm = -0.2,
						RightUpperArm = 0.4
					}
				},
				leftLeg = {
					Name = "Left Leg",
					Size = Vector3.new(1, 2, 1),
					R15 = {
						LeftFoot = -0.85,
						LeftLowerLeg = -0.15,
						LeftUpperLeg = 0.6
					}
				},
				rightLeg = {
					Name = "Right Leg",
					Size = Vector3.new(1, 2, 1),
					R15 = {
						RightFoot = -0.85,
						RightLowerLeg = -0.15,
						RightUpperLeg = 0.6
					}
				}
			}
			for i, v in pairs(c:GetChildren()) do
				if v:IsA("BasePart") then
					for i1, v1 in pairs(v:GetChildren()) do
						if v1:IsA("Motor6D") then
							v1.Part0 = nil
						end
					end
				end
			end
			for i, v in pairs(R6parts) do
				local part = Instance.new("Part")
				part.Name = v.Name
				part.Size = v.Size
				part.CFrame = cf
				part.Anchored = false
				part.Transparency = 1
				part.CanCollide = false
				for i1, v1 in pairs(v.R15) do
					local R15part = gp(c, i1, "BasePart")
					local att = gp(R15part, "att1_" .. i1, "Attachment")
					if R15part then
						local weld = Instance.new("Weld", R15part)
						weld.Part0 = part
						weld.Part1 = R15part
						weld.C0 = CFrame.new(0, v1, 0)
						weld.C1 = CFrame.new(0, 0, 0)
						R15part.Massless = true
						R15part.Name = "R15_" .. i1
						if att then
							att.Parent = part
							att.Position = Vector3.new(0, v1, 0)
							R15part.Parent = att
						else
							R15part.Parent = part
						end
					end
				end
				part.Parent = c
				R6parts[i] = part
			end
			local R6joints = {
				neck = {
					Parent = R6parts.torso,
					Name = "Neck",
					Part0 = R6parts.torso,
					Part1 = R6parts.head,
					C0 = CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
					C1 = CFrame.new(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
				},
				rootJoint = {
					Parent = R6parts.root,
					Name = "RootJoint" ,
					Part0 = R6parts.root,
					Part1 = R6parts.torso,
					C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
					C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
				},
				rightShoulder = {
					Parent = R6parts.torso,
					Name = "Right Shoulder",
					Part0 = R6parts.torso,
					Part1 = R6parts.rightArm,
					C0 = CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
					C1 = CFrame.new(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
				},
				leftShoulder = {
					Parent = R6parts.torso,
					Name = "Left Shoulder",
					Part0 = R6parts.torso,
					Part1 = R6parts.leftArm,
					C0 = CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
					C1 = CFrame.new(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
				},
				rightHip = {
					Parent = R6parts.torso,
					Name = "Right Hip",
					Part0 = R6parts.torso,
					Part1 = R6parts.rightLeg,
					C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
					C1 = CFrame.new(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
				},
				leftHip = {
					Parent = R6parts.torso,
					Name = "Left Hip" ,
					Part0 = R6parts.torso,
					Part1 = R6parts.leftLeg,
					C0 = CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
					C1 = CFrame.new(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
				}
			}
			for i, v in pairs(R6joints) do
				local joint = Instance.new("Motor6D")
				for prop, val in pairs(v) do
					joint[prop] = val
				end
				R6joints[i] = joint
			end
			hum1.RigType = Enum.HumanoidRigType.R6
			hum1.HipHeight = 0
		end
	end
end)

Reanimationv1rhmButton.Name = "Reanimationv1rhmButton"
Reanimationv1rhmButton.Parent = ReanimationsFrame
Reanimationv1rhmButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Reanimationv1rhmButton.Position = UDim2.new(0.240932643, 0, 0.284518838, 0)
Reanimationv1rhmButton.Size = UDim2.new(0, 200, 0, 36)
Reanimationv1rhmButton.Font = Enum.Font.SourceSans
Reanimationv1rhmButton.Text = "Reanimation v1(Remove Hats Mesh)"
Reanimationv1rhmButton.TextColor3 = Color3.fromRGB(0, 0, 0)
Reanimationv1rhmButton.TextSize = 14.000
Reanimationv1rhmButton.MouseButton1Down:Connect(function()
	for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if v:IsA("Accessory") then
			if v.Handle:FindFirstChildOfClass("Mesh") or v.Handle:FindFirstChildOfClass("SpecialMesh") then
				if v.Handle:FindFirstChildOfClass("SpecialMesh") then
					v.Handle:FindFirstChildOfClass("SpecialMesh"):Remove()
				end
			end
		end
	end

	for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
		if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then
			game:GetService("RunService").Heartbeat:connect(function()
				v.Velocity = Vector3.new(0,35,0)
				wait(0.5)
			end)
		end
	end

	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Electroware Notification";
		Text = "Elecroware Netless executed please wait untill your health is 0";
		Icon = "http://www.roblox.com/asset/?id=8724185099"})

	local netboost = 100 --velocity 
	--netboost usage: 
	--set to false to disable
	--vector3 if you dont want the velocity to change
	--number to change the velocity in real time with magnitude equal to the number
	local simradius = "shp" --simulation radius method
	--"shp" - sethiddenproperty
	--"ssr" - setsimulationradius
	--false - disable
	local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
	local newanimate = true --disables the animate script and enable after reanimation
	local discharscripts = true --disables all localScripts parented to your character before reanimation
	local R15toR6 = true --tries to convert your character to r6 if its r15
	local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
	local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
	local method = 3 --reanimation method
	--methods:
	--0 - breakJoints (takes [loadtime] seconds to laod)
	--1 - limbs
	--2 - limbs + anti respawn
	--3 - limbs + breakJoints after [loadtime] seconds
	--4 - remove humanoid + breakJoints
	--5 - remove humanoid + limbs
	local alignmode = 2 --AlignPosition mode
	--modes:
	--1 - AlignPosition rigidity enabled true
	--2 - 2 AlignPositions rigidity enabled both true and false
	--3 - AlignPosition rigidity enabled false
	local hedafterneck = true --disable aligns for head and enable after neck is removed

	local lp = game:GetService("Players").LocalPlayer
	local rs = game:GetService("RunService")
	local stepped = rs.Stepped
	local heartbeat = rs.Heartbeat
	local renderstepped = rs.RenderStepped
	local sg = game:GetService("StarterGui")
	local ws = game:GetService("Workspace")

	local c = lp.Character

	local function gp(parent, name, className)
		local ret = nil
		if parent then
			for i, v in pairs(parent:GetChildren()) do
				if (v.Name == name) and v:IsA(className) then
					ret = v
				end
			end
		end
		return ret
	end

	local function align(Part0, Part1)
		Part0.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001, 0.0001, 0.0001)

		local att1 = Instance.new("Attachment")
		att1.Orientation = Vector3.new(0, 0, 0)
		att1.Position = Vector3.new(0, 0, 0)
		att1.Archivable = true
		local att0 = att1:Clone()

		if (alignmode == 1) or (alignmode == 2) then
			local ape = Instance.new("AlignPosition", att0)
			ape.ApplyAtCenterOfMass = false
			ape.MaxForce = math.huge
			ape.MaxVelocity = math.huge
			ape.ReactionForceEnabled = false
			ape.Responsiveness = 200
			ape.Attachment1 = att1
			ape.Attachment0 = att0
			ape.Name = "AlignPositionRtrue"
			ape.RigidityEnabled = true
		end

		if (alignmode == 2) or (alignmode == 3) then
			local apd = Instance.new("AlignPosition", att0)
			apd.ApplyAtCenterOfMass = false
			apd.MaxForce = math.huge
			apd.MaxVelocity = math.huge
			apd.ReactionForceEnabled = false
			apd.Responsiveness = 200
			apd.Attachment1 = att1
			apd.Attachment0 = att0
			apd.Name = "AlignPositionRfalse"
			apd.RigidityEnabled = false
		end

		local ao = Instance.new("AlignOrientation", att0)
		ao.MaxAngularVelocity = math.huge
		ao.MaxTorque = math.huge
		ao.PrimaryAxisOnly = false
		ao.ReactionTorqueEnabled = false
		ao.Responsiveness = 200
		ao.Attachment1 = att1
		ao.Attachment0 = att0
		ao.RigidityEnabled = false

		att1.Parent = Part1
		att1.Name = "att1_" .. Part1.Name

		att0.Parent = Part0
		att0.Name = "att0_" .. Part0.Name

		if typeof(netboost) == "Vector3" then
			spawn(function()
				local vel = Vector3.new(0, 0, 0)
				while Part0 and Part0.Parent do
					Part0.Velocity = vel
					heartbeat:Wait()
					if Part0 and Part0.Parent then
						vel = Part0.Velocity
						Part0.Velocity = netboost
						stepped:Wait()
					end
				end
			end)
		end

		if typeof(netboost) == "number" then
			spawn(function()
				local vel = Vector3.new(0, 0, 0)
				while Part0 and Part0.Parent do
					Part0.Velocity = vel
					heartbeat:Wait()
					if Part0 and Part0.Parent then
						local newvel = vel
						local mag = newvel.Magnitude
						if mag < 0.1 then
							newvel = Vector3.new(0, netboost, 0)
						else
							local multiplier = netboost / mag
							newvel *= Vector3.new(multiplier,  multiplier, multiplier)
						end
						vel = Part0.Velocity
						Part0.Velocity = newvel
						stepped:Wait()
					end
				end
			end)
		end
	end

	local function respawnrequest()
		local c = lp.Character
		local ccfr = ws.CurrentCamera.CFrame
		local fc = Instance.new("Model")
		local nh = Instance.new("Humanoid", fc)
		lp.Character = fc
		nh.Health = 0
		lp.Character = c
		fc:Destroy()
		local con = nil
		local function confunc()
			con:Disconnect()
			ws.CurrentCamera.CFrame = ccfr
		end
		con = renderstepped:Connect(confunc)
	end

	local destroyhum = (method == 4) or (method == 5)
	local breakjoints = (method == 0) or (method == 4)
	local antirespawn = (method == 0) or (method == 2) or (method == 3)

	addtools = addtools and gp(lp, "Backpack", "Backpack")

	if not (c and c.Parent) then
		return
	end

	if simradius == "shp" then
		local shp = sethiddenproperty or set_hidden_property or set_hidden_prop or sethiddenprop
		if shp then
			spawn(function()
				while heartbeat:Wait() and c and c.Parent do
					shp(lp, "SimulationRadius", math.huge)
				end
			end)
		end
	end

	if simradius == "ssr" then
		local ssr = setsimulationradius or set_simulation_radius or set_sim_radius or setsimradius or set_simulation_rad or setsimulationrad
		if ssr then
			spawn(function()
				while stepped:Wait() and c and c.Parent do
					ssr(math.huge)
				end
			end)
		end
	end

	antiragdoll = antiragdoll and function(v)
		if v and v.Parent and (v:IsA("HingeConstraint") or v:IsA("BallSocketConstraint")) then
			v:Destroy()
		end
	end

	if antiragdoll then
		for i, v in pairs(c:GetDescendants()) do
			antiragdoll(v)
		end
		c.DescendantAdded:Connect(antiragdoll)
	end

	if antirespawn then
		respawnrequest()
	end

	if method == 0 then
		wait(loadtime)
		if not (c and c.Parent) then
			return
		end
	end

	if discharscripts then
		for i, v in pairs(c:GetChildren()) do
			if v and v.Parent and v:IsA("LocalScript") then
				v.Disabled = true
			end
		end
	elseif newanimate then
		local animate = gp(c, "Animate", "LocalScript")
		if animate and (not animate.Disabled) then
			animate.Disabled = true
		else
			newanimate = false
		end
	end

	local hum = c:FindFirstChildOfClass("Humanoid")
	if hum then
		for i, v in pairs(hum:GetPlayingAnimationTracks()) do
			v:Stop()
		end
	end

	if addtools then
		for i, v in pairs(addtools:GetChildren()) do
			if v and v.Parent and v:IsA("Tool") then
				v.Parent = c
			end
		end
	end

	pcall(function()
		settings().Physics.AllowSleep = false
		settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
	end)

	local OLDscripts = {}

	for i, v in pairs(c:GetDescendants()) do
		if v.ClassName == "Script" then
			table.insert(OLDscripts, v)
		end
	end

	local scriptNames = {}

	for i, v in pairs(c:GetDescendants()) do
		if v and v.Parent and v:IsA("BasePart") then
			local newName = tostring(i)
			local exists = true
			while exists do
				exists = false
				for i, v in pairs(OLDscripts) do
					if v.Name == newName then
						exists = true
					end
				end
				if exists then
					newName = newName .. "_"    
				end
			end
			table.insert(scriptNames, newName)
			Instance.new("Script", v).Name = newName
		end
	end

	c.Archivable = true
	local cl = c:Clone()
	for i, v in pairs(cl:GetDescendants()) do
		pcall(function()
			v.Transparency = 1
			v.Anchored = false
		end)
	end

	local model = Instance.new("Model", c)
	model.Name = model.ClassName

	for i, v in pairs(c:GetChildren()) do
		if v and v.Parent and (v ~= model) then
			if destroyhum and v:IsA("Humanoid") then
				v:Destroy()
			else
				if addtools and v:IsA("Tool") then
					for i1, v1 in pairs(v:GetDescendants()) do
						if v1 and v1.Parent and v1:IsA("BasePart") then
							local bv = Instance.new("BodyVelocity", v1)
							bv.Velocity = Vector3.new(0, 0, 0)
							bv.MaxForce = Vector3.new(1000, 1000, 1000)
							bv.P = 1250
							bv.Name = "bv_" .. v.Name
						end
					end
				end
				v.Parent = model
			end
		end
	end
	local head = gp(model, "Head", "BasePart")
	local torso = gp(model, "Torso", "BasePart") or gp(model, "UpperTorso", "BasePart")
	if breakjoints then
		model:BreakJoints()
	else
		if head and torso then
			for i, v in pairs(model:GetDescendants()) do
				if v and v.Parent and v:IsA("Weld") or v:IsA("Snap") or v:IsA("Glue") or v:IsA("Motor") or v:IsA("Motor6D") then
					local save = false
					if (v.Part0 == torso) and (v.Part1 == head) then
						save = true
					end
					if (v.Part0 == head) and (v.Part1 == torso) then
						save = true
					end
					if save then
						if hedafterneck then
							hedafterneck = v
						end
					else
						v:Destroy()
					end
				end
			end
		end
		if method == 3 then
			spawn(function()
				wait(loadtime)
				if model and model.Parent then
					model:BreakJoints()
				end
			end)
		end
	end

	cl.Parent = c
	for i, v in pairs(cl:GetChildren()) do
		if v and v.Parent then
			v.Parent = c
		end
	end
	cl:Destroy()

	local modelcolcon = nil
	local function modelcolf()
		if model and model.Parent then
			for i, v in pairs(model:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
		else
			modelcolcon:Disconnect()
		end
	end
	modelcolcon = stepped:Connect(modelcolf)
	modelcolf()

	for i, scr in pairs(model:GetDescendants()) do
		if scr and scr.Parent and (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
			local Part0 = scr.Parent
			if Part0:IsA("BasePart") then
				for i1, scr1 in pairs(c:GetDescendants()) do
					if scr1 and scr1.Parent and (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
						local Part1 = scr1.Parent
						if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
							align(Part0, Part1)
						end
					end
				end
			end
		end
	end

	if (typeof(hedafterneck) == "Instance") and head and head.Parent then
		local aligns = {}
		for i, v in pairs(head:GetDescendants()) do
			if v and v.Parent and (v:IsA("AlignPosition") or v:IsA("AlignOrientation")) then
				table.insert(aligns, v)
				v.Enabled = false
			end
		end
		spawn(function()
			while c and c.Parent and hedafterneck and hedafterneck.Parent do
				stepped:Wait()
			end
			if not (c and c.Parent and head and head.Parent) then
				return
			end
			for i, v in pairs(aligns) do
				pcall(function()
					v.Enabled = true
				end)
			end
		end)
	end

	for i, v in pairs(c:GetDescendants()) do
		if v and v.Parent then
			if v.ClassName == "Script" then
				if table.find(scriptNames, v.Name) then
					v:Destroy()
				end
			else
				if not v:IsDescendantOf(model) then
					if v:IsA("Decal") then
						v.Transparency = 1
					end
					if v:IsA("ForceField") then
						v.Visible = false
					end
					if v:IsA("Sound") then
						v.Playing = false
					end
					if v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") then
						v.Enabled = false
					end
				end
			end
		end
	end

	if newanimate then
		local animate = gp(c, "Animate", "LocalScript")
		if animate then
			animate.Disabled = false
		end
	end

	if addtools then
		for i, v in pairs(c:GetChildren()) do
			if v and v.Parent and v:IsA("Tool") then
				v.Parent = addtools
			end
		end
	end

	local hum0 = model:FindFirstChildOfClass("Humanoid")
	local hum1 = c:FindFirstChildOfClass("Humanoid")
	if hum1 then
		ws.CurrentCamera.CameraSubject = hum1
		spawn(function()
			renderstepped:Wait()
			if c and c.Parent and hum1 and (hum1.Parent == c) then
				ws.CurrentCamera.CameraSubject = hum1
			end
		end)
		if hum0 then
			hum0.Changed:Connect(function(prop)
				if (prop == "Jump") and hum1 and hum1.Parent then
					hum1.Jump = hum0.Jump
				end
			end)
		else
			lp.Character = nil
			lp.Character = c
		end
	end

	local rb = Instance.new("BindableEvent", c)
	rb.Event:Connect(function()
		rb:Destroy()
		sg:SetCore("ResetButtonCallback", true)
		if destroyhum then
			c:BreakJoints()
			return
		end
		if antirespawn then
			if hum0 and hum0.Parent and (hum0.Health > 0) then
				model:BreakJoints()
				hum0.Health = 0
			end
			respawnrequest()
		else
			if hum0 and hum0.Parent and (hum0.Health > 0) then
				model:BreakJoints()
				hum0.Health = 0
			end
		end
	end)
	sg:SetCore("ResetButtonCallback", rb)

	spawn(function()
		while c and c.Parent do
			if hum0 and hum0.Parent and hum1 and hum1.Parent then
				hum1.Jump = hum0.Jump
			end
			wait()
		end
		sg:SetCore("ResetButtonCallback", true)
	end)

	R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
	if R15toR6 then
		local cf = nil
		pcall(function()
			cf = gp(c, "HumanoidRootPart", "BasePart").CFrame
		end)
		if cf then
			local R6parts = { 
				head = {
					Name = "Head",
					Size = Vector3.new(2, 1, 1),
					R15 = {
						Head = 0
					}
				},
				torso = {
					Name = "Torso",
					Size = Vector3.new(2, 2, 1),
					R15 = {
						UpperTorso = 0.2,
						LowerTorso = -0.8
					}
				},
				root = {
					Name = "HumanoidRootPart",
					Size = Vector3.new(2, 2, 1),
					R15 = {
						HumanoidRootPart = 0
					}
				},
				leftArm = {
					Name = "Left Arm",
					Size = Vector3.new(1, 2, 1),
					R15 = {
						LeftHand = -0.85,
						LeftLowerArm = -0.2,
						LeftUpperArm = 0.4
					}
				},
				rightArm = {
					Name = "Right Arm",
					Size = Vector3.new(1, 2, 1),
					R15 = {
						RightHand = -0.85,
						RightLowerArm = -0.2,
						RightUpperArm = 0.4
					}
				},
				leftLeg = {
					Name = "Left Leg",
					Size = Vector3.new(1, 2, 1),
					R15 = {
						LeftFoot = -0.85,
						LeftLowerLeg = -0.15,
						LeftUpperLeg = 0.6
					}
				},
				rightLeg = {
					Name = "Right Leg",
					Size = Vector3.new(1, 2, 1),
					R15 = {
						RightFoot = -0.85,
						RightLowerLeg = -0.15,
						RightUpperLeg = 0.6
					}
				}
			}
			for i, v in pairs(c:GetChildren()) do
				if v:IsA("BasePart") then
					for i1, v1 in pairs(v:GetChildren()) do
						if v1:IsA("Motor6D") then
							v1.Part0 = nil
						end
					end
				end
			end
			for i, v in pairs(R6parts) do
				local part = Instance.new("Part")
				part.Name = v.Name
				part.Size = v.Size
				part.CFrame = cf
				part.Anchored = false
				part.Transparency = 1
				part.CanCollide = false
				for i1, v1 in pairs(v.R15) do
					local R15part = gp(c, i1, "BasePart")
					local att = gp(R15part, "att1_" .. i1, "Attachment")
					if R15part then
						local weld = Instance.new("Weld", R15part)
						weld.Part0 = part
						weld.Part1 = R15part
						weld.C0 = CFrame.new(0, v1, 0)
						weld.C1 = CFrame.new(0, 0, 0)
						R15part.Massless = true
						R15part.Name = "R15_" .. i1
						if att then
							att.Parent = part
							att.Position = Vector3.new(0, v1, 0)
							R15part.Parent = att
						else
							R15part.Parent = part
						end
					end
				end
				part.Parent = c
				R6parts[i] = part
			end
			local R6joints = {
				neck = {
					Parent = R6parts.torso,
					Name = "Neck",
					Part0 = R6parts.torso,
					Part1 = R6parts.head,
					C0 = CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
					C1 = CFrame.new(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
				},
				rootJoint = {
					Parent = R6parts.root,
					Name = "RootJoint" ,
					Part0 = R6parts.root,
					Part1 = R6parts.torso,
					C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
					C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
				},
				rightShoulder = {
					Parent = R6parts.torso,
					Name = "Right Shoulder",
					Part0 = R6parts.torso,
					Part1 = R6parts.rightArm,
					C0 = CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
					C1 = CFrame.new(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
				},
				leftShoulder = {
					Parent = R6parts.torso,
					Name = "Left Shoulder",
					Part0 = R6parts.torso,
					Part1 = R6parts.leftArm,
					C0 = CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
					C1 = CFrame.new(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
				},
				rightHip = {
					Parent = R6parts.torso,
					Name = "Right Hip",
					Part0 = R6parts.torso,
					Part1 = R6parts.rightLeg,
					C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
					C1 = CFrame.new(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
				},
				leftHip = {
					Parent = R6parts.torso,
					Name = "Left Hip" ,
					Part0 = R6parts.torso,
					Part1 = R6parts.leftLeg,
					C0 = CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
					C1 = CFrame.new(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
				}
			}
			for i, v in pairs(R6joints) do
				local joint = Instance.new("Motor6D")
				for prop, val in pairs(v) do
					joint[prop] = val
				end
				R6joints[i] = joint
			end
			hum1.RigType = Enum.HumanoidRigType.R6
			hum1.HipHeight = 0
		end
	end
end)

Reanimationv1Button_2.Name = "Reanimationv1Button"
Reanimationv1Button_2.Parent = ReanimationsFrame
Reanimationv1Button_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Reanimationv1Button_2.Position = UDim2.new(0.240932643, 0, 0.49372384, 0)
Reanimationv1Button_2.Size = UDim2.new(0, 200, 0, 36)
Reanimationv1Button_2.Font = Enum.Font.SourceSans
Reanimationv1Button_2.Text = "FE Penis v3 Reanimation"
Reanimationv1Button_2.TextColor3 = Color3.fromRGB(0, 0, 0)
Reanimationv1Button_2.TextSize = 14.000
Reanimationv1Button_2.MouseButton1Down:Connect(function()
	game.Players.LocalPlayer.Character.InternationalFedora.Handle.SpecialMesh:Destroy()
	game.Players.LocalPlayer.Character.MeshPartAccessory.Handle.SpecialMesh:Destroy()
	game.Players.LocalPlayer.Character["Pal Hair"].Handle.Mesh:Destroy()
	game.Players.LocalPlayer.Character.LavanderHair.Handle.Mesh:Destroy()
	
	for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
		if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then
			game:GetService("RunService").Heartbeat:connect(function()
				v.Velocity = Vector3.new(0,35,0)
				wait(0.5)
			end)
		end
	end

	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Electroware Notification";
		Text = "Elecroware Netless executed please wait untill your health is 0";
		Icon = "http://www.roblox.com/asset/?id=8724185099"})

	local netboost = 100 --velocity 
	--netboost usage: 
	--set to false to disable
	--vector3 if you dont want the velocity to change
	--number to change the velocity in real time with magnitude equal to the number
	local simradius = "shp" --simulation radius method
	--"shp" - sethiddenproperty
	--"ssr" - setsimulationradius
	--false - disable
	local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
	local newanimate = true --disables the animate script and enable after reanimation
	local discharscripts = true --disables all localScripts parented to your character before reanimation
	local R15toR6 = true --tries to convert your character to r6 if its r15
	local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
	local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
	local method = 3 --reanimation method
	--methods:
	--0 - breakJoints (takes [loadtime] seconds to laod)
	--1 - limbs
	--2 - limbs + anti respawn
	--3 - limbs + breakJoints after [loadtime] seconds
	--4 - remove humanoid + breakJoints
	--5 - remove humanoid + limbs
	local alignmode = 2 --AlignPosition mode
	--modes:
	--1 - AlignPosition rigidity enabled true
	--2 - 2 AlignPositions rigidity enabled both true and false
	--3 - AlignPosition rigidity enabled false
	local hedafterneck = true --disable aligns for head and enable after neck is removed

	local lp = game:GetService("Players").LocalPlayer
	local rs = game:GetService("RunService")
	local stepped = rs.Stepped
	local heartbeat = rs.Heartbeat
	local renderstepped = rs.RenderStepped
	local sg = game:GetService("StarterGui")
	local ws = game:GetService("Workspace")

	local c = lp.Character

	local function gp(parent, name, className)
		local ret = nil
		if parent then
			for i, v in pairs(parent:GetChildren()) do
				if (v.Name == name) and v:IsA(className) then
					ret = v
				end
			end
		end
		return ret
	end

	local function align(Part0, Part1)
		Part0.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001, 0.0001, 0.0001)

		local att1 = Instance.new("Attachment")
		att1.Orientation = Vector3.new(0, 0, 0)
		att1.Position = Vector3.new(0, 0, 0)
		att1.Archivable = true
		local att0 = att1:Clone()

		if (alignmode == 1) or (alignmode == 2) then
			local ape = Instance.new("AlignPosition", att0)
			ape.ApplyAtCenterOfMass = false
			ape.MaxForce = math.huge
			ape.MaxVelocity = math.huge
			ape.ReactionForceEnabled = false
			ape.Responsiveness = 200
			ape.Attachment1 = att1
			ape.Attachment0 = att0
			ape.Name = "AlignPositionRtrue"
			ape.RigidityEnabled = true
		end

		if (alignmode == 2) or (alignmode == 3) then
			local apd = Instance.new("AlignPosition", att0)
			apd.ApplyAtCenterOfMass = false
			apd.MaxForce = math.huge
			apd.MaxVelocity = math.huge
			apd.ReactionForceEnabled = false
			apd.Responsiveness = 200
			apd.Attachment1 = att1
			apd.Attachment0 = att0
			apd.Name = "AlignPositionRfalse"
			apd.RigidityEnabled = false
		end

		local ao = Instance.new("AlignOrientation", att0)
		ao.MaxAngularVelocity = math.huge
		ao.MaxTorque = math.huge
		ao.PrimaryAxisOnly = false
		ao.ReactionTorqueEnabled = false
		ao.Responsiveness = 200
		ao.Attachment1 = att1
		ao.Attachment0 = att0
		ao.RigidityEnabled = false

		att1.Parent = Part1
		att1.Name = "att1_" .. Part1.Name

		att0.Parent = Part0
		att0.Name = "att0_" .. Part0.Name

		if typeof(netboost) == "Vector3" then
			spawn(function()
				local vel = Vector3.new(0, 0, 0)
				while Part0 and Part0.Parent do
					Part0.Velocity = vel
					heartbeat:Wait()
					if Part0 and Part0.Parent then
						vel = Part0.Velocity
						Part0.Velocity = netboost
						stepped:Wait()
					end
				end
			end)
		end

		if typeof(netboost) == "number" then
			spawn(function()
				local vel = Vector3.new(0, 0, 0)
				while Part0 and Part0.Parent do
					Part0.Velocity = vel
					heartbeat:Wait()
					if Part0 and Part0.Parent then
						local newvel = vel
						local mag = newvel.Magnitude
						if mag < 0.1 then
							newvel = Vector3.new(0, netboost, 0)
						else
							local multiplier = netboost / mag
							newvel *= Vector3.new(multiplier,  multiplier, multiplier)
						end
						vel = Part0.Velocity
						Part0.Velocity = newvel
						stepped:Wait()
					end
				end
			end)
		end
	end

	local function respawnrequest()
		local c = lp.Character
		local ccfr = ws.CurrentCamera.CFrame
		local fc = Instance.new("Model")
		local nh = Instance.new("Humanoid", fc)
		lp.Character = fc
		nh.Health = 0
		lp.Character = c
		fc:Destroy()
		local con = nil
		local function confunc()
			con:Disconnect()
			ws.CurrentCamera.CFrame = ccfr
		end
		con = renderstepped:Connect(confunc)
	end

	local destroyhum = (method == 4) or (method == 5)
	local breakjoints = (method == 0) or (method == 4)
	local antirespawn = (method == 0) or (method == 2) or (method == 3)

	addtools = addtools and gp(lp, "Backpack", "Backpack")

	if not (c and c.Parent) then
		return
	end

	if simradius == "shp" then
		local shp = sethiddenproperty or set_hidden_property or set_hidden_prop or sethiddenprop
		if shp then
			spawn(function()
				while heartbeat:Wait() and c and c.Parent do
					shp(lp, "SimulationRadius", math.huge)
				end
			end)
		end
	end

	if simradius == "ssr" then
		local ssr = setsimulationradius or set_simulation_radius or set_sim_radius or setsimradius or set_simulation_rad or setsimulationrad
		if ssr then
			spawn(function()
				while stepped:Wait() and c and c.Parent do
					ssr(math.huge)
				end
			end)
		end
	end

	antiragdoll = antiragdoll and function(v)
		if v and v.Parent and (v:IsA("HingeConstraint") or v:IsA("BallSocketConstraint")) then
			v:Destroy()
		end
	end

	if antiragdoll then
		for i, v in pairs(c:GetDescendants()) do
			antiragdoll(v)
		end
		c.DescendantAdded:Connect(antiragdoll)
	end

	if antirespawn then
		respawnrequest()
	end

	if method == 0 then
		wait(loadtime)
		if not (c and c.Parent) then
			return
		end
	end

	if discharscripts then
		for i, v in pairs(c:GetChildren()) do
			if v and v.Parent and v:IsA("LocalScript") then
				v.Disabled = true
			end
		end
	elseif newanimate then
		local animate = gp(c, "Animate", "LocalScript")
		if animate and (not animate.Disabled) then
			animate.Disabled = true
		else
			newanimate = false
		end
	end

	local hum = c:FindFirstChildOfClass("Humanoid")
	if hum then
		for i, v in pairs(hum:GetPlayingAnimationTracks()) do
			v:Stop()
		end
	end

	if addtools then
		for i, v in pairs(addtools:GetChildren()) do
			if v and v.Parent and v:IsA("Tool") then
				v.Parent = c
			end
		end
	end

	pcall(function()
		settings().Physics.AllowSleep = false
		settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
	end)

	local OLDscripts = {}

	for i, v in pairs(c:GetDescendants()) do
		if v.ClassName == "Script" then
			table.insert(OLDscripts, v)
		end
	end

	local scriptNames = {}

	for i, v in pairs(c:GetDescendants()) do
		if v and v.Parent and v:IsA("BasePart") then
			local newName = tostring(i)
			local exists = true
			while exists do
				exists = false
				for i, v in pairs(OLDscripts) do
					if v.Name == newName then
						exists = true
					end
				end
				if exists then
					newName = newName .. "_"    
				end
			end
			table.insert(scriptNames, newName)
			Instance.new("Script", v).Name = newName
		end
	end

	c.Archivable = true
	local cl = c:Clone()
	for i, v in pairs(cl:GetDescendants()) do
		pcall(function()
			v.Transparency = 1
			v.Anchored = false
		end)
	end

	local model = Instance.new("Model", c)
	model.Name = model.ClassName

	for i, v in pairs(c:GetChildren()) do
		if v and v.Parent and (v ~= model) then
			if destroyhum and v:IsA("Humanoid") then
				v:Destroy()
			else
				if addtools and v:IsA("Tool") then
					for i1, v1 in pairs(v:GetDescendants()) do
						if v1 and v1.Parent and v1:IsA("BasePart") then
							local bv = Instance.new("BodyVelocity", v1)
							bv.Velocity = Vector3.new(0, 0, 0)
							bv.MaxForce = Vector3.new(1000, 1000, 1000)
							bv.P = 1250
							bv.Name = "bv_" .. v.Name
						end
					end
				end
				v.Parent = model
			end
		end
	end
	local head = gp(model, "Head", "BasePart")
	local torso = gp(model, "Torso", "BasePart") or gp(model, "UpperTorso", "BasePart")
	if breakjoints then
		model:BreakJoints()
	else
		if head and torso then
			for i, v in pairs(model:GetDescendants()) do
				if v and v.Parent and v:IsA("Weld") or v:IsA("Snap") or v:IsA("Glue") or v:IsA("Motor") or v:IsA("Motor6D") then
					local save = false
					if (v.Part0 == torso) and (v.Part1 == head) then
						save = true
					end
					if (v.Part0 == head) and (v.Part1 == torso) then
						save = true
					end
					if save then
						if hedafterneck then
							hedafterneck = v
						end
					else
						v:Destroy()
					end
				end
			end
		end
		if method == 3 then
			spawn(function()
				wait(loadtime)
				if model and model.Parent then
					model:BreakJoints()
				end
			end)
		end
	end

	cl.Parent = c
	for i, v in pairs(cl:GetChildren()) do
		if v and v.Parent then
			v.Parent = c
		end
	end
	cl:Destroy()

	local modelcolcon = nil
	local function modelcolf()
		if model and model.Parent then
			for i, v in pairs(model:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
		else
			modelcolcon:Disconnect()
		end
	end
	modelcolcon = stepped:Connect(modelcolf)
	modelcolf()

	for i, scr in pairs(model:GetDescendants()) do
		if scr and scr.Parent and (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
			local Part0 = scr.Parent
			if Part0:IsA("BasePart") then
				for i1, scr1 in pairs(c:GetDescendants()) do
					if scr1 and scr1.Parent and (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
						local Part1 = scr1.Parent
						if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
							align(Part0, Part1)
						end
					end
				end
			end
		end
	end

	if (typeof(hedafterneck) == "Instance") and head and head.Parent then
		local aligns = {}
		for i, v in pairs(head:GetDescendants()) do
			if v and v.Parent and (v:IsA("AlignPosition") or v:IsA("AlignOrientation")) then
				table.insert(aligns, v)
				v.Enabled = false
			end
		end
		spawn(function()
			while c and c.Parent and hedafterneck and hedafterneck.Parent do
				stepped:Wait()
			end
			if not (c and c.Parent and head and head.Parent) then
				return
			end
			for i, v in pairs(aligns) do
				pcall(function()
					v.Enabled = true
				end)
			end
		end)
	end

	for i, v in pairs(c:GetDescendants()) do
		if v and v.Parent then
			if v.ClassName == "Script" then
				if table.find(scriptNames, v.Name) then
					v:Destroy()
				end
			else
				if not v:IsDescendantOf(model) then
					if v:IsA("Decal") then
						v.Transparency = 1
					end
					if v:IsA("ForceField") then
						v.Visible = false
					end
					if v:IsA("Sound") then
						v.Playing = false
					end
					if v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") then
						v.Enabled = false
					end
				end
			end
		end
	end

	if newanimate then
		local animate = gp(c, "Animate", "LocalScript")
		if animate then
			animate.Disabled = false
		end
	end

	if addtools then
		for i, v in pairs(c:GetChildren()) do
			if v and v.Parent and v:IsA("Tool") then
				v.Parent = addtools
			end
		end
	end

	local hum0 = model:FindFirstChildOfClass("Humanoid")
	local hum1 = c:FindFirstChildOfClass("Humanoid")
	if hum1 then
		ws.CurrentCamera.CameraSubject = hum1
		spawn(function()
			renderstepped:Wait()
			if c and c.Parent and hum1 and (hum1.Parent == c) then
				ws.CurrentCamera.CameraSubject = hum1
			end
		end)
		if hum0 then
			hum0.Changed:Connect(function(prop)
				if (prop == "Jump") and hum1 and hum1.Parent then
					hum1.Jump = hum0.Jump
				end
			end)
		else
			lp.Character = nil
			lp.Character = c
		end
	end

	local rb = Instance.new("BindableEvent", c)
	rb.Event:Connect(function()
		rb:Destroy()
		sg:SetCore("ResetButtonCallback", true)
		if destroyhum then
			c:BreakJoints()
			return
		end
		if antirespawn then
			if hum0 and hum0.Parent and (hum0.Health > 0) then
				model:BreakJoints()
				hum0.Health = 0
			end
			respawnrequest()
		else
			if hum0 and hum0.Parent and (hum0.Health > 0) then
				model:BreakJoints()
				hum0.Health = 0
			end
		end
	end)
	sg:SetCore("ResetButtonCallback", rb)

	spawn(function()
		while c and c.Parent do
			if hum0 and hum0.Parent and hum1 and hum1.Parent then
				hum1.Jump = hum0.Jump
			end
			wait()
		end
		sg:SetCore("ResetButtonCallback", true)
	end)

	R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
	if R15toR6 then
		local cf = nil
		pcall(function()
			cf = gp(c, "HumanoidRootPart", "BasePart").CFrame
		end)
		if cf then
			local R6parts = { 
				head = {
					Name = "Head",
					Size = Vector3.new(2, 1, 1),
					R15 = {
						Head = 0
					}
				},
				torso = {
					Name = "Torso",
					Size = Vector3.new(2, 2, 1),
					R15 = {
						UpperTorso = 0.2,
						LowerTorso = -0.8
					}
				},
				root = {
					Name = "HumanoidRootPart",
					Size = Vector3.new(2, 2, 1),
					R15 = {
						HumanoidRootPart = 0
					}
				},
				leftArm = {
					Name = "Left Arm",
					Size = Vector3.new(1, 2, 1),
					R15 = {
						LeftHand = -0.85,
						LeftLowerArm = -0.2,
						LeftUpperArm = 0.4
					}
				},
				rightArm = {
					Name = "Right Arm",
					Size = Vector3.new(1, 2, 1),
					R15 = {
						RightHand = -0.85,
						RightLowerArm = -0.2,
						RightUpperArm = 0.4
					}
				},
				leftLeg = {
					Name = "Left Leg",
					Size = Vector3.new(1, 2, 1),
					R15 = {
						LeftFoot = -0.85,
						LeftLowerLeg = -0.15,
						LeftUpperLeg = 0.6
					}
				},
				rightLeg = {
					Name = "Right Leg",
					Size = Vector3.new(1, 2, 1),
					R15 = {
						RightFoot = -0.85,
						RightLowerLeg = -0.15,
						RightUpperLeg = 0.6
					}
				}
			}
			for i, v in pairs(c:GetChildren()) do
				if v:IsA("BasePart") then
					for i1, v1 in pairs(v:GetChildren()) do
						if v1:IsA("Motor6D") then
							v1.Part0 = nil
						end
					end
				end
			end
			for i, v in pairs(R6parts) do
				local part = Instance.new("Part")
				part.Name = v.Name
				part.Size = v.Size
				part.CFrame = cf
				part.Anchored = false
				part.Transparency = 1
				part.CanCollide = false
				for i1, v1 in pairs(v.R15) do
					local R15part = gp(c, i1, "BasePart")
					local att = gp(R15part, "att1_" .. i1, "Attachment")
					if R15part then
						local weld = Instance.new("Weld", R15part)
						weld.Part0 = part
						weld.Part1 = R15part
						weld.C0 = CFrame.new(0, v1, 0)
						weld.C1 = CFrame.new(0, 0, 0)
						R15part.Massless = true
						R15part.Name = "R15_" .. i1
						if att then
							att.Parent = part
							att.Position = Vector3.new(0, v1, 0)
							R15part.Parent = att
						else
							R15part.Parent = part
						end
					end
				end
				part.Parent = c
				R6parts[i] = part
			end
			local R6joints = {
				neck = {
					Parent = R6parts.torso,
					Name = "Neck",
					Part0 = R6parts.torso,
					Part1 = R6parts.head,
					C0 = CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
					C1 = CFrame.new(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
				},
				rootJoint = {
					Parent = R6parts.root,
					Name = "RootJoint" ,
					Part0 = R6parts.root,
					Part1 = R6parts.torso,
					C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
					C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
				},
				rightShoulder = {
					Parent = R6parts.torso,
					Name = "Right Shoulder",
					Part0 = R6parts.torso,
					Part1 = R6parts.rightArm,
					C0 = CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
					C1 = CFrame.new(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
				},
				leftShoulder = {
					Parent = R6parts.torso,
					Name = "Left Shoulder",
					Part0 = R6parts.torso,
					Part1 = R6parts.leftArm,
					C0 = CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
					C1 = CFrame.new(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
				},
				rightHip = {
					Parent = R6parts.torso,
					Name = "Right Hip",
					Part0 = R6parts.torso,
					Part1 = R6parts.rightLeg,
					C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
					C1 = CFrame.new(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
				},
				leftHip = {
					Parent = R6parts.torso,
					Name = "Left Hip" ,
					Part0 = R6parts.torso,
					Part1 = R6parts.leftLeg,
					C0 = CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
					C1 = CFrame.new(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
				}
			}
			for i, v in pairs(R6joints) do
				local joint = Instance.new("Motor6D")
				for prop, val in pairs(v) do
					joint[prop] = val
				end
				R6joints[i] = joint
			end
			hum1.RigType = Enum.HumanoidRigType.R6
			hum1.HipHeight = 0
		end
	end
end)

InfoFrame.Name = "InfoFrame"
InfoFrame.Parent = MainFrame
InfoFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
InfoFrame.Position = UDim2.new(0.221774191, 0, 0.121323526, 0)
InfoFrame.Size = UDim2.new(0, 386, 0, 239)

Credits.Name = "Credits"
Credits.Parent = InfoFrame
Credits.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Credits.Size = UDim2.new(0, 386, 0, 50)
Credits.Font = Enum.Font.SourceSans
Credits.Text = "made by ayoyao#3744"
Credits.TextColor3 = Color3.fromRGB(0, 0, 0)
Credits.TextSize = 14.000

xButton.Name = "xButton"
xButton.Parent = MainFrame
xButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
xButton.Position = UDim2.new(0, 0, 0.860294104, 0)
xButton.Size = UDim2.new(0, 110, 0, 38)
xButton.Font = Enum.Font.SourceSans
xButton.Text = "x"
xButton.TextColor3 = Color3.fromRGB(0, 0, 0)
xButton.TextSize = 14.000
xButton.MouseButton1Down:Connect(function()
	ElectrowareSG:Destroy()
end)

NeededHatsFrame.Name = "NeededHatsFrame"
NeededHatsFrame.Parent = MainFrame
NeededHatsFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NeededHatsFrame.Position = UDim2.new(0.221774191, 0, 0.121323526, 0)
NeededHatsFrame.Size = UDim2.new(0, 386, 0, 239)
NeededHatsFrame.Visible = false

TextLabel_2.Parent = NeededHatsFrame
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.Size = UDim2.new(0, 386, 0, 35)
TextLabel_2.Font = Enum.Font.SourceSans
TextLabel_2.Text = "Click to copy"
TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.TextSize = 14.000

FEpenisHatsButton.Name = "FEpenisHatsButton"
FEpenisHatsButton.Parent = NeededHatsFrame
FEpenisHatsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FEpenisHatsButton.Position = UDim2.new(0.012953368, 0, 0.146443501, 0)
FEpenisHatsButton.Size = UDim2.new(0, 375, 0, 33)
FEpenisHatsButton.Font = Enum.Font.SourceSans
FEpenisHatsButton.Text = "FE Penis hats: 3992084515, 4246228452, 1103003368"
FEpenisHatsButton.TextColor3 = Color3.fromRGB(0, 0, 0)
FEpenisHatsButton.TextScaled = true
FEpenisHatsButton.TextSize = 14.000
FEpenisHatsButton.TextWrapped = true
FEpenisHatsButton.MouseButton1Down:Connect(function()
	setclipboard("3992084515, 4246228452, 1103003368")
end)
FEpenisHatsButton_2.Name = "FEpenisHatsButton"
FEpenisHatsButton_2.Parent = NeededHatsFrame
FEpenisHatsButton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FEpenisHatsButton_2.Position = UDim2.new(0.012953368, 0, 0.35146445, 0)
FEpenisHatsButton_2.Size = UDim2.new(0, 375, 0, 33)
FEpenisHatsButton_2.Font = Enum.Font.SourceSans
FEpenisHatsButton_2.Text = "FE Penis v2 hats: 3992084515, 4246228452, 451220849, 63690008"
FEpenisHatsButton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
FEpenisHatsButton_2.TextScaled = true
FEpenisHatsButton_2.TextSize = 14.000
FEpenisHatsButton_2.TextWrapped = true
FEpenisHatsButton_2.MouseButton1Down:connect(function()
    setclipboard("3992084515, 4246228452, 451220849, 63690008")
end)

FEpenisHatsButton_3.Name = "FEpenisHatsButton"
FEpenisHatsButton_3.Parent = NeededHatsFrame
FEpenisHatsButton_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FEpenisHatsButton_3.Position = UDim2.new(0.012953368, 0, 0.564853549, 0)
FEpenisHatsButton_3.Size = UDim2.new(0, 375, 0, 33)
FEpenisHatsButton_3.Font = Enum.Font.SourceSans
FEpenisHatsButton_3.Text = "FE Ass and Boobs hats: 4154538250, 4622081834, 4819740796, 4381832739"
FEpenisHatsButton_3.TextColor3 = Color3.fromRGB(0, 0, 0)
FEpenisHatsButton_3.TextScaled = true
FEpenisHatsButton_3.TextSize = 14.000
FEpenisHatsButton_3.TextWrapped = true
FEpenisHatsButton_3.MouseButton1Down:connect(function()
    setclipboard("4154538250, 4622081834, 4819740796, 4381832739")
end)

FEpenisHatsButton_4.Name = "FEpenisHatsButton"
FEpenisHatsButton_4.Parent = NeededHatsFrame
FEpenisHatsButton_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FEpenisHatsButton_4.Position = UDim2.new(0.012953368, 0, 0.761506259, 0)
FEpenisHatsButton_4.Size = UDim2.new(0, 375, 0, 33)
FEpenisHatsButton_4.Font = Enum.Font.SourceSans
FEpenisHatsButton_4.Text = "FE Penis v3 hats: 4246228452, 3992084515, 617605556, 451220849, 63690008"
FEpenisHatsButton_4.TextColor3 = Color3.fromRGB(0, 0, 0)
FEpenisHatsButton_4.TextScaled = true
FEpenisHatsButton_4.TextSize = 14.000
FEpenisHatsButton_4.TextWrapped = true
FEpenisHatsButton_4.MouseButton1Down:connect(function()
    setclipboard("4246228452, 3992084515, 617605556, 451220849, 63690008")
end)

-- Scripts:

local function AGAA_fake_script() -- ReanimationsButton.LocalScript 
	local script = Instance.new('LocalScript', ReanimationsButton)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.ReanimationsFrame.Visible = true
		script.Parent.Parent.Parent.InfoFrame.Visible = false
		script.Parent.Parent.Parent.FreeFEscriptsFrame.Visible = false
		script.Parent.Parent.Parent.NeededHatsFrame.Visible = false
	end)
end
coroutine.wrap(AGAA_fake_script)()
local function DQTOO_fake_script() -- FreeFEscriptsButton.LocalScript 
	local script = Instance.new('LocalScript', FreeFEscriptsButton)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.ReanimationsFrame.Visible = false
		script.Parent.Parent.Parent.InfoFrame.Visible = false
		script.Parent.Parent.Parent.FreeFEscriptsFrame.Visible = true
		script.Parent.Parent.Parent.NeededHatsFrame.Visible = false
	end)
end
coroutine.wrap(DQTOO_fake_script)()
local function ZIEU_fake_script() -- InfoButton.LocalScript 
	local script = Instance.new('LocalScript', InfoButton)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.ReanimationsFrame.Visible = false
		script.Parent.Parent.Parent.InfoFrame.Visible = true
		script.Parent.Parent.Parent.FreeFEscriptsFrame.Visible = false
		script.Parent.Parent.Parent.NeededHatsFrame.Visible = false
	end)
end
coroutine.wrap(ZIEU_fake_script)()
local function RYJWN_fake_script() -- NeededHtasButton.LocalScript 
	local script = Instance.new('LocalScript', NeededHtasButton)
	
	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.ReanimationsFrame.Visible = false
		script.Parent.Parent.Parent.InfoFrame.Visible = false
		script.Parent.Parent.Parent.FreeFEscriptsFrame.Visible = false
		script.Parent.Parent.Parent.NeededHatsFrame.Visible = true
	end)
end
coroutine.wrap(RYJWN_fake_script)()
		
	else
		WrongKey.Visible = true
	end
end)

UICorner_3.Parent = TextButton

Frame.Parent = MainGui
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.Position = UDim2.new(0.89670527, 0, -0.0234192032, 0)
Frame.Size = UDim2.new(0, 48, 0, 45)

UICorner_4.Parent = Frame

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(85, 170, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(85, 170, 255))}
UIGradient_2.Parent = Frame

TextButton_2.Parent = Frame
TextButton_2.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TextButton_2.Position = UDim2.new(0.13241826, 0, 0.133491069, 0)
TextButton_2.Size = UDim2.new(0, 35, 0, 33)
TextButton_2.Font = Enum.Font.GothamBlack
TextButton_2.Text = "x"
TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_2.TextSize = 14.000
TextButton_2.MouseButton1Down:Connect(function()
	OfficialBitZKeySystem:Destroy()
end)

UICorner_5.Parent = TextButton_2

WrongKey.Name = "WrongKey"
WrongKey.Parent = OfficialBitZKeySystem
WrongKey.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
WrongKey.Position = UDim2.new(0.412536442, 0, 0.259833127, 0)
WrongKey.Size = UDim2.new(0, 345, 0, 403)
WrongKey.Visible = false

TextLabel_2.Parent = WrongKey
TextLabel_2.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TextLabel_2.Position = UDim2.new(0.162389949, 0, 0.444233358, 0)
TextLabel_2.Size = UDim2.new(0, 232, 0, 78)
TextLabel_2.Font = Enum.Font.GothamBlack
TextLabel_2.Text = "Wrong Key!"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14.000
TextLabel_2.TextWrapped = true

UICorner_6.Parent = TextLabel_2

UICorner_7.Parent = WrongKey

ImageLabel_2.Parent = WrongKey
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.Position = UDim2.new(0.313043505, 0, 0.0942928046, 0)
ImageLabel_2.Size = UDim2.new(0, 127, 0, 125)
ImageLabel_2.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

TextButton_3.Parent = WrongKey
TextButton_3.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TextButton_3.Position = UDim2.new(0.192416251, 0, 0.717121243, 0)
TextButton_3.Size = UDim2.new(0, 213, 0, 75)
TextButton_3.Font = Enum.Font.GothamBlack
TextButton_3.Text = "Try again"
TextButton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_3.TextScaled = true
TextButton_3.TextSize = 14.000
TextButton_3.TextWrapped = true

UICorner_8.Parent = TextButton_3

-- Scripts:

local function KUFI_fake_script() -- MainGui.LocalScript 
	local script = Instance.new('LocalScript', MainGui)

	local button = script.Parent
	local gradient = button.UIGradient
	local ts = game:GetService("TweenService")
	local ti = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	local offset = {Offset = Vector2.new(1, 0)}
	local create = ts:Create(gradient, ti, offset)
	local startingPos = Vector2.new(-1, 0)
	local list = {} 
	local s, kpt = ColorSequence.new, ColorSequenceKeypoint.new
	local counter = 0
	local status = "down" 
	gradient.Offset = startingPos
	local function rainbowColors()
		local sat, val = 255, 255 
		for i = 1, 15 do 
			local hue = i * 17 
			table.insert(list, Color3.fromHSV(hue / 255, sat / 255, val / 255))
		end
	end
	rainbowColors()
	gradient.Color = s({
		kpt(0, list[#list]),
		kpt(0.5, list[#list - 1]),
		kpt(1, list[#list - 2])
	})
	counter = #list
	local function animate()
		create:Play()
		create.Completed:Wait() 
		gradient.Offset = startingPos 
		gradient.Rotation = 180
		if counter == #list - 1 and status == "down" then
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[#list]), 
				kpt(1, list[1]) 
			})
			counter = 1
			status = "up" 
		elseif counter == #list and status == "down" then 
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[1]),
				kpt(1, list[2])
			})
			counter = 2
			status = "up"
		elseif counter <= #list - 2 and status == "down" then 
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[counter + 1]), 
				kpt(1, list[counter + 2])
			})
			counter = counter + 2
			status = "up"
		end
		create:Play()
		create.Completed:Wait()
		gradient.Offset = startingPos
		gradient.Rotation = 0 
		if counter == #list - 1 and status == "up" then
			gradient.Color = s({ 
	
				kpt(0, list[1]), 
				kpt(0.5, list[#list]), 
				kpt(1, gradient.Color.Keypoints[3].Value)
			})
			counter = 1
			status = "down"
		elseif counter == #list and status == "up" then
			gradient.Color = s({
				kpt(0, list[2]),
				kpt(0.5, list[1]), 
				kpt(1, gradient.Color.Keypoints[3].Value)
			})
			counter = 2
			status = "down"
		elseif counter <= #list - 2 and status == "up" then
			gradient.Color = s({
				kpt(0, list[counter + 2]), 
				kpt(0.5, list[counter + 1]), 
				kpt(1, gradient.Color.Keypoints[3].Value) 	
			})
			counter = counter + 2
			status = "down"
		end
		animate()
	end
	animate()
end
coroutine.wrap(KUFI_fake_script)()
local function JQNS_fake_script() -- TextBox.LocalScript 
	local script = Instance.new('LocalScript', TextBox)

	script.Parent.Parent.TextButton.MouseButton1Down:Connect(function()
		if script.Parent.Text == "cnajcj556dakf" then
			script.Parent.Parent.Parent.Parent:Destroy()
		else
			print("Just get the fucking Key from the Discord server.")
			script.Parent.Parent.Parent.Parent.WrongKey.Visible = true
		end
	end)
end
coroutine.wrap(JQNS_fake_script)()
local function SYQCXSR_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local button = script.Parent
	local gradient = button.UIGradient
	local ts = game:GetService("TweenService")
	local ti = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	local offset = {Offset = Vector2.new(1, 0)}
	local create = ts:Create(gradient, ti, offset)
	local startingPos = Vector2.new(-1, 0)
	local list = {} 
	local s, kpt = ColorSequence.new, ColorSequenceKeypoint.new
	local counter = 0
	local status = "down" 
	gradient.Offset = startingPos
	local function rainbowColors()
		local sat, val = 255, 255 
		for i = 1, 15 do 
			local hue = i * 17 
			table.insert(list, Color3.fromHSV(hue / 255, sat / 255, val / 255))
		end
	end
	rainbowColors()
	gradient.Color = s({
		kpt(0, list[#list]),
		kpt(0.5, list[#list - 1]),
		kpt(1, list[#list - 2])
	})
	counter = #list
	local function animate()
		create:Play()
		create.Completed:Wait() 
		gradient.Offset = startingPos 
		gradient.Rotation = 180
		if counter == #list - 1 and status == "down" then
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[#list]), 
				kpt(1, list[1]) 
			})
			counter = 1
			status = "up" 
		elseif counter == #list and status == "down" then 
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[1]),
				kpt(1, list[2])
			})
			counter = 2
			status = "up"
		elseif counter <= #list - 2 and status == "down" then 
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[counter + 1]), 
				kpt(1, list[counter + 2])
			})
			counter = counter + 2
			status = "up"
		end
		create:Play()
		create.Completed:Wait()
		gradient.Offset = startingPos
		gradient.Rotation = 0 
		if counter == #list - 1 and status == "up" then
			gradient.Color = s({ 
	
				kpt(0, list[1]), 
				kpt(0.5, list[#list]), 
				kpt(1, gradient.Color.Keypoints[3].Value)
			})
			counter = 1
			status = "down"
		elseif counter == #list and status == "up" then
			gradient.Color = s({
				kpt(0, list[2]),
				kpt(0.5, list[1]), 
				kpt(1, gradient.Color.Keypoints[3].Value)
			})
			counter = 2
			status = "down"
		elseif counter <= #list - 2 and status == "up" then
			gradient.Color = s({
				kpt(0, list[counter + 2]), 
				kpt(0.5, list[counter + 1]), 
				kpt(1, gradient.Color.Keypoints[3].Value) 	
			})
			counter = counter + 2
			status = "down"
		end
		animate()
	end
	animate()
end
coroutine.wrap(SYQCXSR_fake_script)()
local function JAWZCQI_fake_script() -- TextButton_3.LocalScript 
	local script = Instance.new('LocalScript', TextButton_3)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Visible = false
	end)
end
coroutine.wrap(JAWZCQI_fake_script)()
