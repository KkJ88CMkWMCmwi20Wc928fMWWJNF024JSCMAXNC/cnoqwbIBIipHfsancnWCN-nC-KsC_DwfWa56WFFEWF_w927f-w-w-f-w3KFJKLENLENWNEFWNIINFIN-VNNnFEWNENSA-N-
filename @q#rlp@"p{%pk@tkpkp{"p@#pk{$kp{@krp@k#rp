local OfficialBitZKeySystem = Instance.new("ScreenGui")
local MainGui = Instance.new("Frame")
local UIGradient = Instance.new("UIGradient")
local UICorner = Instance.new("UICorner")
local KeyFrame = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local TextBox = Instance.new("TextBox")
local TextLabel = Instance.new("TextLabel")
local ImageLabel = Instance.new("ImageLabel")
local TextButton = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local Frame = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local TextButton_2 = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local WrongKey = Instance.new("Frame")
local TextLabel_2 = Instance.new("TextLabel")
local UICorner_6 = Instance.new("UICorner")
local UICorner_7 = Instance.new("UICorner")
local ImageLabel_2 = Instance.new("ImageLabel")
local TextButton_3 = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")

OfficialBitZKeySystem.Name = "OfficialBitZKeySystem"
OfficialBitZKeySystem.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
OfficialBitZKeySystem.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MainGui.Name = "MainGui"
MainGui.Parent = OfficialBitZKeySystem
MainGui.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainGui.Position = UDim2.new(0.402973175, 0, 0.245530397, 0)
MainGui.Size = UDim2.new(0, 371, 0, 427)

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(85, 170, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient.Parent = MainGui

UICorner.Parent = MainGui

KeyFrame.Name = "KeyFrame"
KeyFrame.Parent = MainGui
KeyFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
KeyFrame.Position = UDim2.new(0.0350404307, 0, 0.0281030443, 0)
KeyFrame.Size = UDim2.new(0, 345, 0, 403)

UICorner_2.Parent = KeyFrame

TextBox.Parent = KeyFrame
TextBox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TextBox.Position = UDim2.new(0.171014488, 0, 0.600496292, 0)
TextBox.Size = UDim2.new(0, 227, 0, 63)
TextBox.Font = Enum.Font.GothamBlack
TextBox.Text = "Key Here!"
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextSize = 14.000

TextLabel.Parent = KeyFrame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(0.0985507295, 0, 0.287841201, 0)
TextLabel.Size = UDim2.new(0, 278, 0, 92)
TextLabel.Font = Enum.Font.GothamBlack
TextLabel.Text = "Please enter a Key!"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

ImageLabel.Parent = KeyFrame
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.Position = UDim2.new(0.353623182, 0, 0.024813896, 0)
ImageLabel.Size = UDim2.new(0, 100, 0, 100)
ImageLabel.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

TextButton.Parent = KeyFrame
TextButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TextButton.Position = UDim2.new(0.281159431, 0, 0.816377163, 0)
TextButton.Size = UDim2.new(0, 149, 0, 50)
TextButton.Font = Enum.Font.GothamBlack
TextButton.Text = "Enter"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true

UICorner_3.Parent = TextButton

Frame.Parent = MainGui
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.Position = UDim2.new(0.89670527, 0, -0.0234192032, 0)
Frame.Size = UDim2.new(0, 48, 0, 45)

UICorner_4.Parent = Frame

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(85, 170, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(85, 170, 255))}
UIGradient_2.Parent = Frame

TextButton_2.Parent = Frame
TextButton_2.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TextButton_2.Position = UDim2.new(0.13241826, 0, 0.133491069, 0)
TextButton_2.Size = UDim2.new(0, 35, 0, 33)
TextButton_2.Font = Enum.Font.GothamBlack
TextButton_2.Text = "x"
TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_2.TextSize = 14.000
TextButton_2.MouseButton1Down:Connect(function()
	OfficialBitZKeySystem:Destroy()
end)

UICorner_5.Parent = TextButton_2

WrongKey.Name = "WrongKey"
WrongKey.Parent = OfficialBitZKeySystem
WrongKey.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
WrongKey.Position = UDim2.new(0.412536442, 0, 0.259833127, 0)
WrongKey.Size = UDim2.new(0, 345, 0, 403)
WrongKey.Visible = false

TextLabel_2.Parent = WrongKey
TextLabel_2.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TextLabel_2.Position = UDim2.new(0.162389949, 0, 0.444233358, 0)
TextLabel_2.Size = UDim2.new(0, 232, 0, 78)
TextLabel_2.Font = Enum.Font.GothamBlack
TextLabel_2.Text = "Wrong Key!"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14.000
TextLabel_2.TextWrapped = true

UICorner_6.Parent = TextLabel_2

UICorner_7.Parent = WrongKey

ImageLabel_2.Parent = WrongKey
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.Position = UDim2.new(0.313043505, 0, 0.0942928046, 0)
ImageLabel_2.Size = UDim2.new(0, 127, 0, 125)
ImageLabel_2.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

TextButton_3.Parent = WrongKey
TextButton_3.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TextButton_3.Position = UDim2.new(0.192416251, 0, 0.717121243, 0)
TextButton_3.Size = UDim2.new(0, 213, 0, 75)
TextButton_3.Font = Enum.Font.GothamBlack
TextButton_3.Text = "Try again"
TextButton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_3.TextScaled = true
TextButton_3.TextSize = 14.000
TextButton_3.TextWrapped = true

UICorner_8.Parent = TextButton_3

-- Scripts:

local function XVNQNZO_fake_script() -- MainGui.LocalScript 
	local script = Instance.new('LocalScript', MainGui)

	local button = script.Parent
	local gradient = button.UIGradient
	local ts = game:GetService("TweenService")
	local ti = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	local offset = {Offset = Vector2.new(1, 0)}
	local create = ts:Create(gradient, ti, offset)
	local startingPos = Vector2.new(-1, 0)
	local list = {} 
	local s, kpt = ColorSequence.new, ColorSequenceKeypoint.new
	local counter = 0
	local status = "down" 
	gradient.Offset = startingPos
	local function rainbowColors()
		local sat, val = 255, 255 
		for i = 1, 15 do 
			local hue = i * 17 
			table.insert(list, Color3.fromHSV(hue / 255, sat / 255, val / 255))
		end
	end
	rainbowColors()
	gradient.Color = s({
		kpt(0, list[#list]),
		kpt(0.5, list[#list - 1]),
		kpt(1, list[#list - 2])
	})
	counter = #list
	local function animate()
		create:Play()
		create.Completed:Wait() 
		gradient.Offset = startingPos 
		gradient.Rotation = 180
		if counter == #list - 1 and status == "down" then
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[#list]), 
				kpt(1, list[1]) 
			})
			counter = 1
			status = "up" 
		elseif counter == #list and status == "down" then 
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[1]),
				kpt(1, list[2])
			})
			counter = 2
			status = "up"
		elseif counter <= #list - 2 and status == "down" then 
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[counter + 1]), 
				kpt(1, list[counter + 2])
			})
			counter = counter + 2
			status = "up"
		end
		create:Play()
		create.Completed:Wait()
		gradient.Offset = startingPos
		gradient.Rotation = 0 
		if counter == #list - 1 and status == "up" then
			gradient.Color = s({ 
	
				kpt(0, list[1]), 
				kpt(0.5, list[#list]), 
				kpt(1, gradient.Color.Keypoints[3].Value)
			})
			counter = 1
			status = "down"
		elseif counter == #list and status == "up" then
			gradient.Color = s({
				kpt(0, list[2]),
				kpt(0.5, list[1]), 
				kpt(1, gradient.Color.Keypoints[3].Value)
			})
			counter = 2
			status = "down"
		elseif counter <= #list - 2 and status == "up" then
			gradient.Color = s({
				kpt(0, list[counter + 2]), 
				kpt(0.5, list[counter + 1]), 
				kpt(1, gradient.Color.Keypoints[3].Value) 	
			})
			counter = counter + 2
			status = "down"
		end
		animate()
	end
	animate()
end
coroutine.wrap(XVNQNZO_fake_script)()
local function YNAZSVQ_fake_script() -- TextBox.LocalScript 
	local script = Instance.new('LocalScript', TextBox)

	script.Parent.Parent.TextButton.MouseButton1Down:Connect(function()
		if script.Parent.Text == "cnajcj556dakf" then
			script.Parent.Parent.Parent.Parent:Destroy()
		else
			print("Just get the fucking Key from the Discord server.")
			script.Parent.Parent.Parent.Parent.WrongKey.Visible = true
		end
	end)
end
coroutine.wrap(YNAZSVQ_fake_script)()
local function HHLXDJQ_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local button = script.Parent
	local gradient = button.UIGradient
	local ts = game:GetService("TweenService")
	local ti = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
	local offset = {Offset = Vector2.new(1, 0)}
	local create = ts:Create(gradient, ti, offset)
	local startingPos = Vector2.new(-1, 0)
	local list = {} 
	local s, kpt = ColorSequence.new, ColorSequenceKeypoint.new
	local counter = 0
	local status = "down" 
	gradient.Offset = startingPos
	local function rainbowColors()
		local sat, val = 255, 255 
		for i = 1, 15 do 
			local hue = i * 17 
			table.insert(list, Color3.fromHSV(hue / 255, sat / 255, val / 255))
		end
	end
	rainbowColors()
	gradient.Color = s({
		kpt(0, list[#list]),
		kpt(0.5, list[#list - 1]),
		kpt(1, list[#list - 2])
	})
	counter = #list
	local function animate()
		create:Play()
		create.Completed:Wait() 
		gradient.Offset = startingPos 
		gradient.Rotation = 180
		if counter == #list - 1 and status == "down" then
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[#list]), 
				kpt(1, list[1]) 
			})
			counter = 1
			status = "up" 
		elseif counter == #list and status == "down" then 
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[1]),
				kpt(1, list[2])
			})
			counter = 2
			status = "up"
		elseif counter <= #list - 2 and status == "down" then 
			gradient.Color = s({
				kpt(0, gradient.Color.Keypoints[1].Value),
				kpt(0.5, list[counter + 1]), 
				kpt(1, list[counter + 2])
			})
			counter = counter + 2
			status = "up"
		end
		create:Play()
		create.Completed:Wait()
		gradient.Offset = startingPos
		gradient.Rotation = 0 
		if counter == #list - 1 and status == "up" then
			gradient.Color = s({ 
	
				kpt(0, list[1]), 
				kpt(0.5, list[#list]), 
				kpt(1, gradient.Color.Keypoints[3].Value)
			})
			counter = 1
			status = "down"
		elseif counter == #list and status == "up" then
			gradient.Color = s({
				kpt(0, list[2]),
				kpt(0.5, list[1]), 
				kpt(1, gradient.Color.Keypoints[3].Value)
			})
			counter = 2
			status = "down"
		elseif counter <= #list - 2 and status == "up" then
			gradient.Color = s({
				kpt(0, list[counter + 2]), 
				kpt(0.5, list[counter + 1]), 
				kpt(1, gradient.Color.Keypoints[3].Value) 	
			})
			counter = counter + 2
			status = "down"
		end
		animate()
	end
	animate()
end
coroutine.wrap(HHLXDJQ_fake_script)()
local function BVXHLS_fake_script() -- TextButton_3.LocalScript 
	local script = Instance.new('LocalScript', TextButton_3)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Visible = false
	end)
end
coroutine.wrap(BVXHLS_fake_script)()
